{
  "devices_remove": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Remove"
      ]
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "device": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/remove",
      "fa": "fa-minus-square-o",
      "short_description": "Components have been removed from a device",
      "use_default_database": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    }
  },
  "events": {
    "endingTime": {
      "type": "datetime"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "devices": {
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "type": "list",
      "required": true,
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "startingTime": {
      "type": "datetime"
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "resource": "events",
        "field": "_id",
        "embeddable": true
      }
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "teaser": false,
      "modifiable": false
    },
    "returnedSameAs": {
      "type": "dict",
      "valueschema": {
        "type": "list",
        "valueschema": [
          "url",
          "type"
        ]
      },
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions.",
      "excludes": "to",
      "writeonly": true,
      "propertyschema": {
        "type": "url"
      },
      "readonly": true
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Add",
        "devices:ToRepair",
        "devices:Repair",
        "devices:EraseBasic",
        "devices:EventWithOneDevice",
        "devices:Deallocate",
        "devices:Dispose",
        "devices:ToDispose",
        "devices:Snapshot",
        "devices:Register",
        "Event",
        "devices:Remove",
        "devices:TestHardDrive",
        "devices:EventWithDevices",
        "devices:EraseSectors",
        "devices:Migrate",
        "devices:Allocate",
        "devices:Ready",
        "devices:Free",
        "devices:ToPrepare",
        "devices:Locate",
        "devices:Receive",
        "devices:DeviceEvent"
      ]
    },
    "software": {
      "type": "dict",
      "sink": -1,
      "schema": {
        "productKey": {
          "type": "string"
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "type": {
      "type": "string",
      "allowed": [
        "FinalUser",
        "CollectionPoint",
        "RecyclingPoint"
      ],
      "required": true
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "automatic": {
      "type": "boolean"
    },
    "request": {
      "type": "string",
      "readonly": true
    },
    "condition": {
      "type": "dict",
      "sink": 1,
      "teaser": true,
      "schema": {
        "appearance": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        },
        "functionality": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the defects of a device that affect its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        }
      }
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "to": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user the devices are allocated to. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "status": {
      "type": "string",
      "required": true
    },
    "_settings": {
      "url": "events",
      "use_default_database": false
    },
    "lifetime": {
      "type": "integer"
    },
    "steps": {
      "type": "list",
      "schema": {
        "type": "dict",
        "schema": {
          "endingTime": {
            "type": "datetime"
          },
          "cleanWithZeros": {
            "type": "boolean"
          },
          "secureRandomSteps": {
            "type": "boolean"
          },
          "startingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "required": true,
            "allowed": [
              "Zeros",
              "Random"
            ]
          },
          "success": {
            "type": "boolean",
            "required": true
          }
        }
      }
    },
    "geo": {
      "excludes": "place",
      "type": "point",
      "description": "Where did it happened",
      "or": [
        "place"
      ],
      "sink": -5
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "DDI",
      "allowed": [
        "DDI",
        "Scan",
        "DeviceHubClient"
      ]
    },
    "success": {
      "type": "boolean"
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "from": {
      "excludes": "to",
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "offline": {
      "type": "boolean"
    },
    "receiver": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "description": "Where did it happened",
      "sink": 0
    },
    "_id": {
      "type": "objectid"
    },
    "unsecured": {
      "type": "list",
      "default": [],
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "pid",
              "model"
            ]
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          },
          "@type": {
            "type": "string"
          }
        }
      }
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "events": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "device": {
      "type": [
        "dict",
        "string"
      ],
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "description": "The event triggered in this computer."
    },
    "receiverOrganization": {
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "version": {
      "type": "version",
      "teaser": false
    }
  },
  "devices_snapshot": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_settings": {
      "url": "events/devices/snapshot",
      "fa": "fa-camera",
      "short_description": "A fast picture of the state and key information of the computer and it's devices.",
      "use_default_database": false
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "DDI",
      "allowed": [
        "DDI",
        "Scan",
        "DeviceHubClient"
      ]
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "teaser": false,
      "modifiable": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "from": {
      "label": "E-mail of the giver",
      "description": "The e-mail of the person or organization that gave the devices. You cannot change this later.",
      "doc": "It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "offline": {
      "type": "boolean"
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "version": {
      "type": "version",
      "teaser": false
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Snapshot"
      ]
    },
    "software": {
      "type": "dict",
      "sink": -1,
      "schema": {
        "productKey": {
          "type": "string"
        }
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "unsecured": {
      "type": "list",
      "default": [],
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "pid",
              "model"
            ]
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          },
          "@type": {
            "type": "string"
          }
        }
      }
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "events": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "device": {
      "type": "dict",
      "sink": 4,
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "components": {
      "type": "list",
      "default": [],
      "teaser": false,
      "schema": {
        "type": "dict",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        },
        "schema": {
          "weight": {
            "type": "float",
            "unitCode": "KGM",
            "teaser": false,
            "sink": -1
          },
          "productId": {
            "type": "string",
            "teaser": false,
            "sink": 3
          },
          "sameAs": {
            "unique": true,
            "type": "list",
            "teaser": false
          },
          "model": {
            "type": "string",
            "short": "Mod.",
            "sink": 4
          },
          "events": {
            "type": "list",
            "materialized": true,
            "schema": {
              "type": "dict"
            }
          },
          "created": {
            "doc": "Sets the _created and _updated, thought to be used in imports.",
            "type": "datetime",
            "writeonly": true,
            "dh_allowed_write_roles": "superuser"
          },
          "manufacturer": {
            "type": "string",
            "short": "Man.",
            "sink": 4
          },
          "tests": {
            "type": "list",
            "readonly": true,
            "schema": {
              "type": "objectid",
              "data_relation": {
                "resource": "events",
                "field": "_id",
                "embeddable": true
              }
            }
          },
          "size": {
            "type": "number",
            "unitCode": "4L",
            "min": 1,
            "sink": 1
          },
          "serialNumber": {
            "type": "string",
            "short": "S/N",
            "sink": 4
          },
          "description": {
            "type": "string",
            "sink": -4,
            "description": "Full long description",
            "maxlength": 500
          },
          "numberOfCores": {
            "type": "integer",
            "min": 1,
            "sink": 1
          },
          "width": {
            "type": "float",
            "unitCode": "MTR",
            "teaser": false,
            "sink": -1
          },
          "owners": {
            "type": "list",
            "sink": 2,
            "materialized": true,
            "schema": {
              "type": "objectid",
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              }
            }
          },
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "components": {
            "type": "list",
            "default": [],
            "sink": 1,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "devices",
                "field": "_id",
                "embeddable": true
              }
            }
          },
          "hid": {
            "type": "hid",
            "short": "HID",
            "teaser": false,
            "sink": 5
          },
          "sectors": {
            "type": "integer",
            "teaser": false,
            "sink": -1
          },
          "height": {
            "type": "float",
            "unitCode": "MTR",
            "teaser": false,
            "sink": -1
          },
          "maxAcceptedMemory": {
            "type": "integer",
            "teaser": false
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "benchmark": {
            "type": "dict",
            "writeonly": true,
            "schema": {
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "writingSpeed": {
                "type": "float",
                "unitCode": "4L"
              },
              "readingSpeed": {
                "type": "float",
                "unitCode": "4L"
              },
              "@type": {
                "type": "string",
                "required": true,
                "teaser": false,
                "allowed": [
                  "BenchmarkHardDrive",
                  "BenchmarkProcessor"
                ]
              },
              "score": {
                "type": "float"
              },
              "created": {
                "doc": "Sets the _created and _updated, thought to be used in imports.",
                "type": "datetime",
                "writeonly": true,
                "dh_allowed_write_roles": "superuser"
              }
            }
          },
          "firmwareRevision": {
            "type": "string",
            "teaser": false,
            "sink": -1
          },
          "labelId": {
            "type": "string",
            "short": "Label",
            "sink": 5
          },
          "totalSlots": {
            "type": "integer",
            "teaser": false
          },
          "test": {
            "type": "dict",
            "schema": {
              "comment": {
                "type": "string",
                "description": "Short comment for fast and easy reading",
                "sink": -4
              },
              "sameAs": {
                "unique": true,
                "type": "list",
                "teaser": false
              },
              "created": {
                "doc": "Sets the _created and _updated, thought to be used in imports.",
                "type": "datetime",
                "writeonly": true,
                "dh_allowed_write_roles": "superuser"
              },
              "@type": {
                "type": "string",
                "required": true,
                "teaser": false,
                "allowed": [
                  "devices:TestHardDrive"
                ]
              },
              "geo": {
                "type": "point",
                "description": "Where did it happened",
                "sink": -5
              },
              "firstError": {
                "type": "integer",
                "nullable": true
              },
              "description": {
                "type": "string",
                "sink": -4,
                "description": "Full long description",
                "maxlength": 500
              },
              "secured": {
                "type": "boolean",
                "sink": -3
              },
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "status": {
                "type": "string",
                "required": true
              },
              "device": {
                "type": "string",
                "data_relation": {
                  "resource": "devices",
                  "field": "_id",
                  "embeddable": true
                },
                "required": false
              },
              "error": {
                "type": "boolean",
                "required": true
              },
              "incidence": {
                "type": "boolean",
                "description": "Check if something went wrong, you can add details in a comment",
                "sink": -3
              },
              "url": {
                "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                "type": "url",
                "move": "sameAs",
                "teaser": false
              },
              "byOrganization": {
                "type": "string",
                "readonly": true
              },
              "lifetime": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "snapshot": {
                "type": "objectid",
                "data_relation": {
                  "resource": "events",
                  "field": "_id",
                  "embeddable": true
                }
              },
              "byUser": {
                "dh_allowed_write_roles": [
                  "admin",
                  "superuser"
                ],
                "coerce_with_context": "<callable>",
                "data_relation": {
                  "resource": "accounts",
                  "field": "_id",
                  "embeddable": true
                },
                "type": "objectid",
                "sink": 2
              },
              "date": {
                "type": "datetime",
                "description": "When this happened. Leave blank if it is happening now",
                "sink": -2
              },
              "parent": {
                "type": "string",
                "data_relation": {
                  "resource": "devices",
                  "field": "_id",
                  "embeddable": true
                },
                "description": "The event triggered in this computer."
              }
            }
          },
          "speed": {
            "type": "number",
            "unitCode": "MHZ",
            "min": 1,
            "sink": -1
          },
          "blockSize": {
            "type": "integer",
            "teaser": false,
            "sink": -1
          },
          "@type": {
            "type": "string",
            "required": true,
            "teaser": false,
            "allowed": [
              "Component",
              "Motherboard",
              "RamModule",
              "SoundCard",
              "GraphicCard",
              "OpticalDrive",
              "HardDrive",
              "Processor",
              "NetworkAdapter"
            ]
          },
          "erasures": {
            "type": "list",
            "readonly": true,
            "schema": {
              "type": "objectid",
              "data_relation": {
                "resource": "events",
                "field": "_id",
                "embeddable": true
              }
            }
          },
          "address": {
            "type": "integer",
            "sink": -1,
            "unitCode": "A99",
            "allowed": [
              256,
              128,
              64,
              32,
              8,
              16
            ]
          },
          "usedSlots": {
            "type": "integer",
            "teaser": false
          },
          "interface": {
            "type": "string",
            "teaser": false,
            "sink": -1
          },
          "pid": {
            "unique": true,
            "type": "string",
            "sink": 5
          },
          "erasure": {
            "type": "dict",
            "writeonly": true,
            "schema": {
              "endingTime": {
                "type": "datetime"
              },
              "cleanWithZeros": {
                "type": "boolean"
              },
              "sameAs": {
                "unique": true,
                "type": "list",
                "teaser": false
              },
              "created": {
                "doc": "Sets the _created and _updated, thought to be used in imports.",
                "type": "datetime",
                "writeonly": true,
                "dh_allowed_write_roles": "superuser"
              },
              "@type": {
                "type": "string",
                "required": true,
                "teaser": false,
                "allowed": [
                  "devices:EraseBasic",
                  "devices:EraseSectors"
                ]
              },
              "comment": {
                "type": "string",
                "description": "Short comment for fast and easy reading",
                "sink": -4
              },
              "secureRandomSteps": {
                "type": "natural",
                "required": true
              },
              "date": {
                "type": "datetime",
                "description": "When this happened. Leave blank if it is happening now",
                "sink": -2
              },
              "description": {
                "type": "string",
                "sink": -4,
                "description": "Full long description",
                "maxlength": 500
              },
              "secured": {
                "type": "boolean",
                "sink": -3
              },
              "byOrganization": {
                "type": "string",
                "readonly": true
              },
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "device": {
                "type": "string",
                "data_relation": {
                  "resource": "devices",
                  "field": "_id",
                  "embeddable": true
                },
                "required": false
              },
              "parent": {
                "type": "string",
                "data_relation": {
                  "resource": "devices",
                  "field": "_id",
                  "embeddable": true
                },
                "description": "The event triggered in this computer."
              },
              "incidence": {
                "type": "boolean",
                "description": "Check if something went wrong, you can add details in a comment",
                "sink": -3
              },
              "startingTime": {
                "type": "datetime"
              },
              "url": {
                "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                "type": "url",
                "move": "sameAs",
                "teaser": false
              },
              "steps": {
                "type": "list",
                "schema": {
                  "type": "dict",
                  "schema": {
                    "endingTime": {
                      "type": "datetime"
                    },
                    "cleanWithZeros": {
                      "type": "boolean"
                    },
                    "secureRandomSteps": {
                      "type": "boolean"
                    },
                    "startingTime": {
                      "type": "datetime"
                    },
                    "@type": {
                      "type": "string",
                      "required": true,
                      "allowed": [
                        "Zeros",
                        "Random"
                      ]
                    },
                    "success": {
                      "type": "boolean",
                      "required": true
                    }
                  }
                }
              },
              "geo": {
                "type": "point",
                "description": "Where did it happened",
                "sink": -5
              },
              "byUser": {
                "dh_allowed_write_roles": [
                  "admin",
                  "superuser"
                ],
                "coerce_with_context": "<callable>",
                "data_relation": {
                  "resource": "accounts",
                  "field": "_id",
                  "embeddable": true
                },
                "type": "objectid",
                "sink": 2
              },
              "success": {
                "type": "boolean"
              }
            }
          },
          "benchmarks": {
            "type": "list",
            "readonly": true,
            "schema": {
              "type": "dict",
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "writingSpeed": {
                  "type": "float",
                  "unitCode": "4L"
                },
                "readingSpeed": {
                  "type": "float",
                  "unitCode": "4L"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "BenchmarkProcessor"
                  ]
                },
                "score": {
                  "type": "float"
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                }
              }
            }
          },
          "connectors": {
            "type": "dict",
            "schema": {
              "pcmcia": {
                "type": "natural"
              },
              "serial": {
                "type": "natural"
              },
              "usb": {
                "type": "natural"
              },
              "firewire": {
                "type": "natural"
              }
            }
          },
          "url": {
            "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
            "type": "url",
            "move": "sameAs",
            "teaser": false
          },
          "ancestors": {
            "type": "list",
            "default": [],
            "materialized": true,
            "schema": {
              "type": "dict",
              "schema": {
                "lots": {
                  "type": "list",
                  "unique_values": true,
                  "schema": {
                    "type": "string",
                    "data_relation": {
                      "resource": "lots",
                      "field": "label",
                      "embeddable": true
                    }
                  }
                },
                "packages": {
                  "type": "list",
                  "unique_values": true,
                  "schema": {
                    "type": "string",
                    "data_relation": {
                      "resource": "packages",
                      "field": "label",
                      "embeddable": true
                    }
                  }
                },
                "places": {
                  "type": "string",
                  "data_relation": {
                    "resource": "places",
                    "field": "label",
                    "embeddable": true
                  }
                },
                "label": {
                  "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
                  "type": "string"
                },
                "@type": {
                  "type": "string",
                  "allowed": [
                    "InputLot",
                    "Lot",
                    "OutputLot",
                    "Package",
                    "Place"
                  ]
                }
              }
            }
          },
          "memory": {
            "type": "float",
            "unitCode": "4L",
            "min": 1,
            "sink": 3
          },
          "isUidSecured": {
            "type": "boolean",
            "default": true,
            "teaser": false
          },
          "_id": {
            "unique": true,
            "type": "string",
            "device_id": true,
            "teaser": false,
            "short": "ID",
            "sink": 4
          },
          "parent": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "sink": 0,
      "label": "Place where the devices are saved",
      "description": "Place the devices to an existing location."
    },
    "automatic": {
      "type": "boolean"
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "request": {
      "type": "string",
      "readonly": true
    },
    "condition": {
      "type": "dict",
      "sink": 1,
      "teaser": true,
      "schema": {
        "appearance": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        },
        "functionality": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the defects of a device that affect its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    }
  },
  "hard-drive": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "size": {
      "type": "float",
      "unitCode": "4L",
      "sink": 1
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "benchmark": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "BenchmarkHardDrive"
          ]
        }
      }
    },
    "firmwareRevision": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "test": {
      "type": "dict",
      "schema": {
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ]
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "lifetime": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "resource": "events",
            "field": "_id",
            "embeddable": true
          }
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        }
      }
    },
    "erasures": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "HardDrive"
      ]
    },
    "tests": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "erasure": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "endingTime": {
          "type": "datetime"
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:EraseBasic",
            "devices:EraseSectors"
          ]
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "startingTime": {
          "type": "datetime"
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "steps": {
          "type": "list",
          "schema": {
            "type": "dict",
            "schema": {
              "endingTime": {
                "type": "datetime"
              },
              "cleanWithZeros": {
                "type": "boolean"
              },
              "secureRandomSteps": {
                "type": "boolean"
              },
              "startingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "required": true,
                "allowed": [
                  "Zeros",
                  "Random"
                ]
              },
              "success": {
                "type": "boolean",
                "required": true
              }
            }
          }
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "benchmarks": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "created": {
            "doc": "Sets the _created and _updated, thought to be used in imports.",
            "type": "datetime",
            "writeonly": true,
            "dh_allowed_write_roles": "superuser"
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "required": true,
            "teaser": false,
            "allowed": [
              "BenchmarkHardDrive"
            ]
          }
        }
      }
    },
    "_settings": {
      "url": "devices/hard-drive",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "devices_test-hard-drive": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "status": {
      "type": "string",
      "required": true
    },
    "_settings": {
      "url": "events/devices/test-hard-drive",
      "fa": "fa-flask",
      "short_description": "A test of the health of the hard drive",
      "use_default_database": false
    },
    "lifetime": {
      "type": "integer"
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "resource": "events",
        "field": "_id",
        "embeddable": true
      }
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:TestHardDrive"
      ]
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "device": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "type": {
      "type": "string"
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "_id": {
      "type": "objectid"
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "description": "The event triggered in this computer."
    }
  },
  "devices": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "required": true,
      "sink": 4
    },
    "firmwareRevision": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "required": true,
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "required": true,
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "totalRamSize": {
      "type": "float",
      "short": "RAM",
      "sink": 1,
      "doc": "It is updated after a Register, Add o Remove",
      "default": 0,
      "unitCode": "E34",
      "description": "The total amount of RAM memory the computer has.",
      "materialized": true
    },
    "tests": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Component",
        "Peripheral",
        "Computer",
        "ComputerMonitor",
        "Motherboard",
        "RamModule",
        "SoundCard",
        "GraphicCard",
        "OpticalDrive",
        "HardDrive",
        "Processor",
        "Mobile",
        "NetworkAdapter",
        "Device"
      ]
    },
    "address": {
      "type": "integer",
      "sink": -1,
      "unitCode": "A99",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "forceCreation": {
      "type": "boolean",
      "default": false
    },
    "type": {
      "type": "string",
      "required": true,
      "allowed": [
        "LED",
        "Scanner",
        "OLED",
        "TFT",
        "Smartphone",
        "Switch",
        "SAI",
        "Mouse",
        "LCD",
        "Keyboard",
        "Tablet",
        "Microtower",
        "Router",
        "Terminal",
        "HUB",
        "Server",
        "Netbook",
        "MultifunctionPrinter",
        "Desktop",
        "Laptop",
        "Printer"
      ]
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "erasure": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "endingTime": {
          "type": "datetime"
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:EraseBasic",
            "devices:EraseSectors"
          ]
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "startingTime": {
          "type": "datetime"
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "steps": {
          "type": "list",
          "schema": {
            "type": "dict",
            "schema": {
              "endingTime": {
                "type": "datetime"
              },
              "cleanWithZeros": {
                "type": "boolean"
              },
              "secureRandomSteps": {
                "type": "boolean"
              },
              "startingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "required": true,
                "allowed": [
                  "Zeros",
                  "Random"
                ]
              },
              "success": {
                "type": "boolean",
                "required": true
              }
            }
          }
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "_settings": {
      "url": "devices",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "meid": {
      "unique": true,
      "type": "string"
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "test": {
      "type": "dict",
      "schema": {
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ]
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "lifetime": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "resource": "events",
            "field": "_id",
            "embeddable": true
          }
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        }
      }
    },
    "connectors": {
      "type": "dict",
      "schema": {
        "pcmcia": {
          "type": "natural"
        },
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      }
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "size": {
      "type": "integer",
      "unitCode": "4L",
      "min": 1,
      "sink": 1
    },
    "numberOfCores": {
      "type": "integer",
      "min": 1,
      "sink": 1
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "totalHardDriveSize": {
      "type": "float",
      "default": 0,
      "sink": 1,
      "short": "Capacity",
      "unitCode": "4L",
      "description": "The total amount of hard-drive capacity the computer has.",
      "materialized": true
    },
    "inches": {
      "type": "natural"
    },
    "benchmark": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "BenchmarkProcessor"
          ]
        },
        "score": {
          "type": "float"
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        }
      }
    },
    "speed": {
      "type": "float",
      "unitCode": "MHZ",
      "min": 1,
      "sink": -1
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "erasures": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "processorModel": {
      "sink": 1,
      "type": "string",
      "short": "CPU",
      "description": "The model of the processor.",
      "materialized": true
    },
    "imei": {
      "unique": true,
      "type": "string"
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "benchmarks": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "required": true,
            "teaser": false,
            "allowed": [
              "BenchmarkProcessor"
            ]
          },
          "score": {
            "type": "float"
          },
          "created": {
            "doc": "Sets the _created and _updated, thought to be used in imports.",
            "type": "datetime",
            "writeonly": true,
            "dh_allowed_write_roles": "superuser"
          }
        }
      }
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "memory": {
      "type": "float",
      "unitCode": "4L",
      "min": 1,
      "sink": 3
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    }
  },
  "devices_free": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Free"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/free",
      "fa": "fa-shopping-cart",
      "short_description": "The devices are available to be received for someone (sold, donated)",
      "use_default_database": false,
      "sink": -4
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_device-event": {
    "endingTime": {
      "type": "datetime"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "devices": {
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "type": "list",
      "required": true,
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "startingTime": {
      "type": "datetime"
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "resource": "events",
        "field": "_id",
        "embeddable": true
      }
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "teaser": false,
      "modifiable": false
    },
    "returnedSameAs": {
      "type": "dict",
      "valueschema": {
        "type": "list",
        "valueschema": [
          "url",
          "type"
        ]
      },
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions.",
      "excludes": "to",
      "writeonly": true,
      "propertyschema": {
        "type": "url"
      },
      "readonly": true
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Add",
        "devices:ToRepair",
        "devices:Repair",
        "devices:EraseBasic",
        "devices:EventWithOneDevice",
        "devices:Deallocate",
        "devices:Dispose",
        "devices:ToDispose",
        "devices:Snapshot",
        "devices:Register",
        "devices:Remove",
        "devices:TestHardDrive",
        "devices:EventWithDevices",
        "devices:EraseSectors",
        "devices:Migrate",
        "devices:Allocate",
        "devices:Ready",
        "devices:Free",
        "devices:ToPrepare",
        "devices:Locate",
        "devices:Receive",
        "devices:DeviceEvent"
      ]
    },
    "software": {
      "type": "dict",
      "sink": -1,
      "schema": {
        "productKey": {
          "type": "string"
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "type": {
      "type": "string",
      "allowed": [
        "FinalUser",
        "CollectionPoint",
        "RecyclingPoint"
      ],
      "required": true
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "automatic": {
      "type": "boolean"
    },
    "request": {
      "type": "string",
      "readonly": true
    },
    "condition": {
      "type": "dict",
      "sink": 1,
      "teaser": true,
      "schema": {
        "appearance": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        },
        "functionality": {
          "type": "dict",
          "schema": {
            "general": {
              "type": "string",
              "description": "Grades the defects of a device that affect its usage.",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ]
            }
          }
        }
      }
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "to": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user the devices are allocated to. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "status": {
      "type": "string",
      "required": true
    },
    "_settings": {
      "url": "events/devices",
      "use_default_database": false
    },
    "lifetime": {
      "type": "integer"
    },
    "steps": {
      "type": "list",
      "schema": {
        "type": "dict",
        "schema": {
          "endingTime": {
            "type": "datetime"
          },
          "cleanWithZeros": {
            "type": "boolean"
          },
          "secureRandomSteps": {
            "type": "boolean"
          },
          "startingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "required": true,
            "allowed": [
              "Zeros",
              "Random"
            ]
          },
          "success": {
            "type": "boolean",
            "required": true
          }
        }
      }
    },
    "geo": {
      "excludes": "place",
      "type": "point",
      "description": "Where did it happened",
      "or": [
        "place"
      ],
      "sink": -5
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "DDI",
      "allowed": [
        "DDI",
        "Scan",
        "DeviceHubClient"
      ]
    },
    "success": {
      "type": "boolean"
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "from": {
      "excludes": "to",
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "offline": {
      "type": "boolean"
    },
    "receiver": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "description": "Where did it happened",
      "sink": 0
    },
    "_id": {
      "type": "objectid"
    },
    "unsecured": {
      "type": "list",
      "default": [],
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "pid",
              "model"
            ]
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          },
          "@type": {
            "type": "string"
          }
        }
      }
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "events": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "device": {
      "type": [
        "dict",
        "string"
      ],
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "description": "The event triggered in this computer."
    },
    "receiverOrganization": {
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "version": {
      "type": "version",
      "teaser": false
    }
  },
  "devices_allocate": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Allocate"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "to": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user the devices are allocated to. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_id": {
      "type": "objectid"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/allocate",
      "fa": "fa-hand-o-right",
      "short_description": "Assign the devices to someone, so that person 'owns' the device",
      "use_default_database": false,
      "sink": -5
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    }
  },
  "devices_erase-sectors": {
    "endingTime": {
      "type": "datetime"
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_settings": {
      "url": "events/devices/erase-sectors",
      "fa": "fa-eraser",
      "use_default_database": false
    },
    "startingTime": {
      "type": "datetime"
    },
    "steps": {
      "type": "list",
      "schema": {
        "type": "dict",
        "schema": {
          "endingTime": {
            "type": "datetime"
          },
          "cleanWithZeros": {
            "type": "boolean"
          },
          "secureRandomSteps": {
            "type": "boolean"
          },
          "startingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "required": true,
            "allowed": [
              "Zeros",
              "Random"
            ]
          },
          "success": {
            "type": "boolean",
            "required": true
          }
        }
      }
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "success": {
      "type": "boolean"
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:EraseSectors"
      ]
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "device": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "description": "The event triggered in this computer."
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_to-dispose": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:ToDispose"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/to-dispose",
      "fa": "fa-trash-o",
      "short_description": "The devices need to be taken for disposal.",
      "use_default_database": false,
      "sink": -8
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "optical-drive": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "OpticalDrive"
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "_settings": {
      "url": "devices/optical-drive",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "devices_ready": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Ready"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/ready",
      "fa": "fa-check",
      "short_description": "The devices work correctly, so they are ready to be used, sold, donated...",
      "use_default_database": false,
      "sink": -2
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "network-adapter": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "speed": {
      "type": "float",
      "unitCode": "E20",
      "sink": 1
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "NetworkAdapter"
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_settings": {
      "url": "devices/network-adapter",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "places": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Place"
      ]
    },
    "address": {
      "type": "dict",
      "schema": {
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressCountry": {
          "doc": "The addressCountry as per ISO 3166 (2 characters).",
          "type": "string",
          "description": "The name of the country",
          "allowed": [
            "ST",
            "BB",
            "ZW",
            "MF",
            "CA",
            "PA",
            "BE",
            "PR",
            "IL",
            "MY",
            "HR",
            "KN",
            "IR",
            "WS",
            "TL",
            "SX",
            "PW",
            "WF",
            "PF",
            "SY",
            "TD",
            "CF",
            "VE",
            "NF",
            "US",
            "SN",
            "GM",
            "BY",
            "RE",
            "RO",
            "DJ",
            "FJ",
            "MO",
            "IO",
            "KG",
            "IT",
            "TZ",
            "DE",
            "AD",
            "TH",
            "HK",
            "BJ",
            "KZ",
            "PN",
            "NC",
            "MQ",
            "SG",
            "RW",
            "MU",
            "DM",
            "BG",
            "MX",
            "VI",
            "PG",
            "SS",
            "UM",
            "CM",
            "MS",
            "HU",
            "AQ",
            "NP",
            "ES",
            "IN",
            "FO",
            "SZ",
            "IE",
            "NO",
            "AO",
            "CZ",
            "TF",
            "KP",
            "GR",
            "KE",
            "RU",
            "AU",
            "CI",
            "CU",
            "UA",
            "ME",
            "SC",
            "LC",
            "GT",
            "SB",
            "AE",
            "VG",
            "JP",
            "TN",
            "VA",
            "MA",
            "MV",
            "PT",
            "BO",
            "PE",
            "SE",
            "SI",
            "CD",
            "SK",
            "BV",
            "AS",
            "LS",
            "AI",
            "MC",
            "SV",
            "HM",
            "TG",
            "KI",
            "AR",
            "OM",
            "MP",
            "YT",
            "SL",
            "LV",
            "BD",
            "SO",
            "LB",
            "YE",
            "NU",
            "ML",
            "BW",
            "BR",
            "LY",
            "NZ",
            "AT",
            "VN",
            "KH",
            "HN",
            "BA",
            "GS",
            "FI",
            "SR",
            "CY",
            "JM",
            "AZ",
            "ZA",
            "PY",
            "VU",
            "HT",
            "PS",
            "BF",
            "LR",
            "EG",
            "GB",
            "KR",
            "MR",
            "AX",
            "BM",
            "TJ",
            "GL",
            "DO",
            "NG",
            "TR",
            "GF",
            "TO",
            "TC",
            "RS",
            "CW",
            "BI",
            "VC",
            "CN",
            "NE",
            "GU",
            "FR",
            "SD",
            "TK",
            "SA",
            "ET",
            "TT",
            "MN",
            "GE",
            "MD",
            "AW",
            "AF",
            "EH",
            "KY",
            "QA",
            "CR",
            "BT",
            "MZ",
            "SH",
            "UG",
            "JE",
            "LK",
            "GW",
            "AG",
            "PM",
            "MK",
            "TW",
            "GG",
            "EE",
            "MH",
            "TM",
            "CX",
            "PH",
            "NR",
            "MG",
            "ID",
            "SJ",
            "CL",
            "CO",
            "TV",
            "NA",
            "CV",
            "IM",
            "BS",
            "BH",
            "GA",
            "IS",
            "BN",
            "MT",
            "IQ",
            "FK",
            "UZ",
            "AL",
            "MW",
            "LU",
            "DZ",
            "AM",
            "PK",
            "GH",
            "FM",
            "LT",
            "JO",
            "ER",
            "LA",
            "CG",
            "GY",
            "KW",
            "LI",
            "GQ",
            "GP",
            "NL",
            "ZM",
            "GD",
            "CC",
            "DK",
            "EC",
            "SM",
            "PL",
            "GN",
            "MM",
            "BZ",
            "KM",
            "CK",
            "BL",
            "UY",
            "NI",
            "BQ",
            "GI",
            "CH"
          ]
        }
      }
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        }
      }
    },
    "type": {
      "type": "string",
      "allowed": [
        "Warehouse",
        "Zone",
        "CollectionPoint",
        "Department"
      ]
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "telephone": {
      "type": "string"
    },
    "_settings": {
      "url": "places",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "places",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "geo": {
      "modifiable": false,
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "sink": -5
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_locate": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Locate"
      ]
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "description": "Where did it happened",
      "sink": 0
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_id": {
      "type": "objectid"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/locate",
      "fa": "fa-map-marker",
      "short_description": "The devices have been placed.",
      "use_default_database": false,
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "excludes": "place",
      "type": "point",
      "description": "Where did it happened",
      "or": [
        "place"
      ],
      "sink": -5
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    }
  },
  "lots": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "InputLot",
        "Lot",
        "OutputLot"
      ]
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "_settings": {
      "url": "lots",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "to": {
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "get_from_data_relation_or_create": "email",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "parents": {
      "type": "dict",
      "schema": {
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "policies": {
      "type": "dict",
      "schema": {
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "type": "dict",
          "schema": {
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ]
            },
            "startDate": {
              "type": "datetime"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "allowed": [
            "Policies"
          ],
          "teaser": false,
          "required": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Write here any custom policy or message you want other users to see.",
          "maxlength": 500
        },
        "dataDestruction": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "mechanical": {
              "type": "boolean"
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ]
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "eraseBasic": {
              "type": "boolean"
            }
          }
        },
        "authorizedRefubrishers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "authorizedResellers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "notifyPolicy": {
          "type": "dict",
          "schema": {
            "refurbisherLocation": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "reseller": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "receiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "refurbisherTipology": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRepaired": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "recycler": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "endReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "startReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "nonResponseOfReceiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "disposal": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "deliveryNote": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeReused": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "socialImpact": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRecycled": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            }
          }
        },
        "finalDisposal": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "returnToReseller": {
              "type": "boolean"
            },
            "returnToCircuit": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "_from": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "sink": 2
    }
  },
  "sound-card": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "SoundCard"
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "_settings": {
      "url": "devices/sound-card",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "motherboard": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "_settings": {
      "url": "devices/motherboard",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Motherboard"
      ]
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "connectors": {
      "type": "dict",
      "schema": {
        "pcmcia": {
          "type": "natural"
        },
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      }
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "devices_add": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Add"
      ]
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "device": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/add",
      "short_description": "Components have been added to a device",
      "use_default_database": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    }
  },
  "groups": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "_settings": {
      "url": "group",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "to": {
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "get_from_data_relation_or_create": "email",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "telephone": {
      "type": "string"
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "geo": {
      "modifiable": false,
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "sink": -5
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Lot",
        "Place",
        "InputLot",
        "Abstract",
        "Physical",
        "Package",
        "OutputLot",
        "Group"
      ]
    },
    "depth": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "address": {
      "type": "dict",
      "schema": {
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressCountry": {
          "doc": "The addressCountry as per ISO 3166 (2 characters).",
          "type": "string",
          "description": "The name of the country",
          "allowed": [
            "ST",
            "BB",
            "ZW",
            "MF",
            "CA",
            "PA",
            "BE",
            "PR",
            "IL",
            "MY",
            "HR",
            "KN",
            "IR",
            "WS",
            "TL",
            "SX",
            "PW",
            "WF",
            "PF",
            "SY",
            "TD",
            "CF",
            "VE",
            "NF",
            "US",
            "SN",
            "GM",
            "BY",
            "RE",
            "RO",
            "DJ",
            "FJ",
            "MO",
            "IO",
            "KG",
            "IT",
            "TZ",
            "DE",
            "AD",
            "TH",
            "HK",
            "BJ",
            "KZ",
            "PN",
            "NC",
            "MQ",
            "SG",
            "RW",
            "MU",
            "DM",
            "BG",
            "MX",
            "VI",
            "PG",
            "SS",
            "UM",
            "CM",
            "MS",
            "HU",
            "AQ",
            "NP",
            "ES",
            "IN",
            "FO",
            "SZ",
            "IE",
            "NO",
            "AO",
            "CZ",
            "TF",
            "KP",
            "GR",
            "KE",
            "RU",
            "AU",
            "CI",
            "CU",
            "UA",
            "ME",
            "SC",
            "LC",
            "GT",
            "SB",
            "AE",
            "VG",
            "JP",
            "TN",
            "VA",
            "MA",
            "MV",
            "PT",
            "BO",
            "PE",
            "SE",
            "SI",
            "CD",
            "SK",
            "BV",
            "AS",
            "LS",
            "AI",
            "MC",
            "SV",
            "HM",
            "TG",
            "KI",
            "AR",
            "OM",
            "MP",
            "YT",
            "SL",
            "LV",
            "BD",
            "SO",
            "LB",
            "YE",
            "NU",
            "ML",
            "BW",
            "BR",
            "LY",
            "NZ",
            "AT",
            "VN",
            "KH",
            "HN",
            "BA",
            "GS",
            "FI",
            "SR",
            "CY",
            "JM",
            "AZ",
            "ZA",
            "PY",
            "VU",
            "HT",
            "PS",
            "BF",
            "LR",
            "EG",
            "GB",
            "KR",
            "MR",
            "AX",
            "BM",
            "TJ",
            "GL",
            "DO",
            "NG",
            "TR",
            "GF",
            "TO",
            "TC",
            "RS",
            "CW",
            "BI",
            "VC",
            "CN",
            "NE",
            "GU",
            "FR",
            "SD",
            "TK",
            "SA",
            "ET",
            "TT",
            "MN",
            "GE",
            "MD",
            "AW",
            "AF",
            "EH",
            "KY",
            "QA",
            "CR",
            "BT",
            "MZ",
            "SH",
            "UG",
            "JE",
            "LK",
            "GW",
            "AG",
            "PM",
            "MK",
            "TW",
            "GG",
            "EE",
            "MH",
            "TM",
            "CX",
            "PH",
            "NR",
            "MG",
            "ID",
            "SJ",
            "CL",
            "CO",
            "TV",
            "NA",
            "CV",
            "IM",
            "BS",
            "BH",
            "GA",
            "IS",
            "BN",
            "MT",
            "IQ",
            "FK",
            "UZ",
            "AL",
            "MW",
            "LU",
            "DZ",
            "AM",
            "PK",
            "GH",
            "FM",
            "LT",
            "JO",
            "ER",
            "LA",
            "CG",
            "GY",
            "KW",
            "LI",
            "GQ",
            "GP",
            "NL",
            "ZM",
            "GD",
            "CC",
            "DK",
            "EC",
            "SM",
            "PL",
            "GN",
            "MM",
            "BZ",
            "KM",
            "CK",
            "BL",
            "UY",
            "NI",
            "BQ",
            "GI",
            "CH"
          ]
        }
      }
    },
    "policies": {
      "type": "dict",
      "schema": {
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "type": "dict",
          "schema": {
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ]
            },
            "startDate": {
              "type": "datetime"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "allowed": [
            "Policies"
          ],
          "teaser": false,
          "required": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Write here any custom policy or message you want other users to see.",
          "maxlength": 500
        },
        "dataDestruction": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "mechanical": {
              "type": "boolean"
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ]
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "eraseBasic": {
              "type": "boolean"
            }
          }
        },
        "authorizedRefubrishers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "authorizedResellers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "notifyPolicy": {
          "type": "dict",
          "schema": {
            "refurbisherLocation": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "reseller": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "receiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "refurbisherTipology": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRepaired": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "recycler": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "endReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "startReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "nonResponseOfReceiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "disposal": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "deliveryNote": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeReused": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "socialImpact": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRecycled": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            }
          }
        },
        "finalDisposal": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "returnToReseller": {
              "type": "boolean"
            },
            "returnToCircuit": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "type": {
      "type": "string",
      "allowed": [
        "Warehouse",
        "Department",
        "CollectionPoint",
        "Zone"
      ]
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "parents": {
      "type": "dict",
      "schema": {
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "places",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "_from": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "sink": 2
    }
  },
  "devices_deallocate": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "from": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "sink": 2
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Deallocate"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/deallocate",
      "fa": "fa-hand-o-left",
      "short_description": "The opposite of Allocate. Remove the ownership of the devices from someone",
      "use_default_database": false,
      "sink": -6
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_erase-basic": {
    "endingTime": {
      "type": "datetime"
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_settings": {
      "url": "events/devices/erase-basic",
      "fa": "fa-eraser",
      "short_description": "Fast erasure of the HardDrive",
      "use_default_database": false
    },
    "startingTime": {
      "type": "datetime"
    },
    "steps": {
      "type": "list",
      "schema": {
        "type": "dict",
        "schema": {
          "endingTime": {
            "type": "datetime"
          },
          "cleanWithZeros": {
            "type": "boolean"
          },
          "secureRandomSteps": {
            "type": "boolean"
          },
          "startingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "required": true,
            "allowed": [
              "Zeros",
              "Random"
            ]
          },
          "success": {
            "type": "boolean",
            "required": true
          }
        }
      }
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "success": {
      "type": "boolean"
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:EraseBasic",
        "devices:EraseSectors"
      ]
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "device": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "required": true
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      },
      "description": "The event triggered in this computer."
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "_id": {
      "type": "objectid"
    }
  },
  "computer-monitor": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "required": true,
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "required": true,
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "required": true,
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "inches": {
      "type": "natural"
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "ComputerMonitor"
      ]
    },
    "type": {
      "type": "string",
      "required": true,
      "allowed": [
        "LED",
        "TFT",
        "OLED",
        "LCD"
      ]
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_settings": {
      "url": "devices/computer-monitor",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    }
  },
  "input-lot": {
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "InputLot"
      ]
    },
    "_settings": {
      "url": "lots/input-lot",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "policies": {
      "type": "dict",
      "schema": {
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "type": "dict",
          "schema": {
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ]
            },
            "startDate": {
              "type": "datetime"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "allowed": [
            "Policies"
          ],
          "teaser": false,
          "required": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Write here any custom policy or message you want other users to see.",
          "maxlength": 500
        },
        "dataDestruction": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "mechanical": {
              "type": "boolean"
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ]
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "eraseBasic": {
              "type": "boolean"
            }
          }
        },
        "authorizedRefubrishers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "authorizedResellers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "notifyPolicy": {
          "type": "dict",
          "schema": {
            "refurbisherLocation": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "reseller": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "receiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "refurbisherTipology": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRepaired": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "recycler": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "endReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "startReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "nonResponseOfReceiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "disposal": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "deliveryNote": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeReused": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "socialImpact": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRecycled": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            }
          }
        },
        "finalDisposal": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "returnToReseller": {
              "type": "boolean"
            },
            "returnToCircuit": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "parents": {
      "type": "dict",
      "schema": {
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "_from": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "sink": 2
    }
  },
  "processor": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "numberOfCores": {
      "type": "integer",
      "min": 1,
      "sink": 1
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "benchmark": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "BenchmarkProcessor"
          ]
        },
        "score": {
          "type": "float"
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        }
      }
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "speed": {
      "type": "float",
      "unitCode": "A86",
      "sink": 1
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Processor"
      ]
    },
    "address": {
      "type": "integer",
      "sink": -1,
      "unitCode": "A99",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "benchmarks": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "required": true,
            "teaser": false,
            "allowed": [
              "BenchmarkProcessor"
            ]
          },
          "score": {
            "type": "float"
          },
          "created": {
            "doc": "Sets the _created and _updated, thought to be used in imports.",
            "type": "datetime",
            "writeonly": true,
            "dh_allowed_write_roles": "superuser"
          }
        }
      }
    },
    "_settings": {
      "url": "devices/processor",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "graphic-card": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "GraphicCard"
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "_settings": {
      "url": "devices/graphic-card",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "memory": {
      "type": "float",
      "unitCode": "4L",
      "min": 1,
      "sink": 3
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "physical": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Physical",
        "Place",
        "Package"
      ]
    },
    "depth": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "address": {
      "type": "dict",
      "schema": {
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressCountry": {
          "doc": "The addressCountry as per ISO 3166 (2 characters).",
          "type": "string",
          "description": "The name of the country",
          "allowed": [
            "ST",
            "BB",
            "ZW",
            "MF",
            "CA",
            "PA",
            "BE",
            "PR",
            "IL",
            "MY",
            "HR",
            "KN",
            "IR",
            "WS",
            "TL",
            "SX",
            "PW",
            "WF",
            "PF",
            "SY",
            "TD",
            "CF",
            "VE",
            "NF",
            "US",
            "SN",
            "GM",
            "BY",
            "RE",
            "RO",
            "DJ",
            "FJ",
            "MO",
            "IO",
            "KG",
            "IT",
            "TZ",
            "DE",
            "AD",
            "TH",
            "HK",
            "BJ",
            "KZ",
            "PN",
            "NC",
            "MQ",
            "SG",
            "RW",
            "MU",
            "DM",
            "BG",
            "MX",
            "VI",
            "PG",
            "SS",
            "UM",
            "CM",
            "MS",
            "HU",
            "AQ",
            "NP",
            "ES",
            "IN",
            "FO",
            "SZ",
            "IE",
            "NO",
            "AO",
            "CZ",
            "TF",
            "KP",
            "GR",
            "KE",
            "RU",
            "AU",
            "CI",
            "CU",
            "UA",
            "ME",
            "SC",
            "LC",
            "GT",
            "SB",
            "AE",
            "VG",
            "JP",
            "TN",
            "VA",
            "MA",
            "MV",
            "PT",
            "BO",
            "PE",
            "SE",
            "SI",
            "CD",
            "SK",
            "BV",
            "AS",
            "LS",
            "AI",
            "MC",
            "SV",
            "HM",
            "TG",
            "KI",
            "AR",
            "OM",
            "MP",
            "YT",
            "SL",
            "LV",
            "BD",
            "SO",
            "LB",
            "YE",
            "NU",
            "ML",
            "BW",
            "BR",
            "LY",
            "NZ",
            "AT",
            "VN",
            "KH",
            "HN",
            "BA",
            "GS",
            "FI",
            "SR",
            "CY",
            "JM",
            "AZ",
            "ZA",
            "PY",
            "VU",
            "HT",
            "PS",
            "BF",
            "LR",
            "EG",
            "GB",
            "KR",
            "MR",
            "AX",
            "BM",
            "TJ",
            "GL",
            "DO",
            "NG",
            "TR",
            "GF",
            "TO",
            "TC",
            "RS",
            "CW",
            "BI",
            "VC",
            "CN",
            "NE",
            "GU",
            "FR",
            "SD",
            "TK",
            "SA",
            "ET",
            "TT",
            "MN",
            "GE",
            "MD",
            "AW",
            "AF",
            "EH",
            "KY",
            "QA",
            "CR",
            "BT",
            "MZ",
            "SH",
            "UG",
            "JE",
            "LK",
            "GW",
            "AG",
            "PM",
            "MK",
            "TW",
            "GG",
            "EE",
            "MH",
            "TM",
            "CX",
            "PH",
            "NR",
            "MG",
            "ID",
            "SJ",
            "CL",
            "CO",
            "TV",
            "NA",
            "CV",
            "IM",
            "BS",
            "BH",
            "GA",
            "IS",
            "BN",
            "MT",
            "IQ",
            "FK",
            "UZ",
            "AL",
            "MW",
            "LU",
            "DZ",
            "AM",
            "PK",
            "GH",
            "FM",
            "LT",
            "JO",
            "ER",
            "LA",
            "CG",
            "GY",
            "KW",
            "LI",
            "GQ",
            "GP",
            "NL",
            "ZM",
            "GD",
            "CC",
            "DK",
            "EC",
            "SM",
            "PL",
            "GN",
            "MM",
            "BZ",
            "KM",
            "CK",
            "BL",
            "UY",
            "NI",
            "BQ",
            "GI",
            "CH"
          ]
        }
      }
    },
    "_settings": {
      "url": "group/physical",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "telephone": {
      "type": "string"
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Warehouse",
        "Department",
        "CollectionPoint",
        "Zone"
      ]
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "places",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "geo": {
      "modifiable": false,
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "sink": -5
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_dispose": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Dispose"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/dispose",
      "fa": "fa-trash-o",
      "short_description": "The devices have been successfully taken for disposal.",
      "use_default_database": false,
      "sink": -9
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "accounts": {
    "organization": {
      "type": "string",
      "description": "The name of the organization the account is in. Organizations can be inside others.",
      "sink": 1
    },
    "fingerprints": {
      "type": "list",
      "readonly": true
    },
    "_settings": {
      "url": "accounts",
      "use_default_database": true
    },
    "password": {
      "doc": "Users can only see their own passwords.",
      "type": "string",
      "minlength": 4,
      "sink": 4
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Account"
      ]
    },
    "token": {
      "type": "string",
      "readonly": true
    },
    "blocked": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "default": true,
      "description": "As a manager, you need to specifically accept the user by unblocking it's account.",
      "type": "boolean",
      "sink": -2
    },
    "publicKey": {
      "type": "string",
      "writeonly": true
    },
    "active": {
      "doc": "Inactive accounts cannot login, and they are created through regular events.",
      "type": "boolean",
      "default": true,
      "description": "Activate the account so you can start using it.",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "isOrganization": {
      "type": "boolean",
      "sink": 2
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "email": {
      "unique": true,
      "type": "email",
      "sink": 5,
      "required": true
    },
    "name": {
      "type": "string",
      "description": "The name of an account, if it is a person or an organization.",
      "sink": 3
    },
    "defaultDatabase": {
      "type": "string",
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "teaser": false,
      "sink": -5
    },
    "databases": {
      "type": "databases",
      "sink": -4,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "teaser": false,
      "required": true
    },
    "role": {
      "doc": "See the Roles section to get more info.",
      "type": "string",
      "default": "basic",
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "allowed": [
        "admin",
        "amateur",
        "basic",
        "superuser",
        "employee"
      ]
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "_id": {
      "type": "objectid"
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    }
  },
  "devices_migrate": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "from": {
      "excludes": "to",
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "devices": {
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "type": "list",
      "required": true,
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Migrate"
      ]
    },
    "_settings": {
      "url": "events/devices/migrate",
      "fa": "fa-share-alt",
      "short_description": "Changes the DeviceHub that contains (i.e. holds) the device.",
      "use_default_database": false,
      "sink": -6
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "to": {
      "excludes": "from",
      "type": "dict",
      "or": [
        "from"
      ],
      "schema": {
        "baseUrl": {
          "doc": "The scheme, domain, any path to reach the DeviceHub.",
          "type": "url",
          "required": true
        },
        "url": {
          "doc": "The URL of the Migrate in the other database.",
          "type": "url",
          "readonly": true
        },
        "database": {
          "doc": "The name of the database as in the URL",
          "type": "string",
          "required": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "components": {
      "doc": "The result of the materialized components",
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "unsecured": {
      "type": "list",
      "default": [],
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "pid",
              "model"
            ]
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          },
          "@type": {
            "type": "string"
          }
        }
      }
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    },
    "returnedSameAs": {
      "type": "dict",
      "valueschema": {
        "type": "list",
        "valueschema": [
          "url",
          "type"
        ]
      },
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions.",
      "excludes": "to",
      "writeonly": true,
      "propertyschema": {
        "type": "url"
      },
      "readonly": true
    }
  },
  "ram-module": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "size": {
      "type": "integer",
      "unitCode": "4L",
      "min": 1,
      "sink": 1
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "speed": {
      "type": "float",
      "unitCode": "MHZ",
      "min": 1,
      "sink": -1
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "RamModule"
      ]
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_settings": {
      "url": "devices/ram-module",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    }
  },
  "component": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "firmwareRevision": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "benchmark": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "BenchmarkHardDrive",
            "BenchmarkProcessor"
          ]
        },
        "score": {
          "type": "float"
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        }
      }
    },
    "tests": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Component",
        "Motherboard",
        "RamModule",
        "SoundCard",
        "GraphicCard",
        "OpticalDrive",
        "HardDrive",
        "Processor",
        "NetworkAdapter"
      ]
    },
    "address": {
      "type": "integer",
      "sink": -1,
      "unitCode": "A99",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ]
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "erasure": {
      "type": "dict",
      "writeonly": true,
      "schema": {
        "endingTime": {
          "type": "datetime"
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:EraseBasic",
            "devices:EraseSectors"
          ]
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "startingTime": {
          "type": "datetime"
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "steps": {
          "type": "list",
          "schema": {
            "type": "dict",
            "schema": {
              "endingTime": {
                "type": "datetime"
              },
              "cleanWithZeros": {
                "type": "boolean"
              },
              "secureRandomSteps": {
                "type": "boolean"
              },
              "startingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "required": true,
                "allowed": [
                  "Zeros",
                  "Random"
                ]
              },
              "success": {
                "type": "boolean",
                "required": true
              }
            }
          }
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "test": {
      "type": "dict",
      "schema": {
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "required": true,
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ]
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Full long description",
          "maxlength": 500
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "required": false
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "lifetime": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "resource": "events",
            "field": "_id",
            "embeddable": true
          }
        },
        "byUser": {
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "coerce_with_context": "<callable>",
          "data_relation": {
            "resource": "accounts",
            "field": "_id",
            "embeddable": true
          },
          "type": "objectid",
          "sink": 2
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "parent": {
          "type": "string",
          "data_relation": {
            "resource": "devices",
            "field": "_id",
            "embeddable": true
          },
          "description": "The event triggered in this computer."
        }
      }
    },
    "connectors": {
      "type": "dict",
      "schema": {
        "pcmcia": {
          "type": "natural"
        },
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      }
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "size": {
      "type": "number",
      "unitCode": "4L",
      "min": 1,
      "sink": 1
    },
    "numberOfCores": {
      "type": "integer",
      "min": 1,
      "sink": 1
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_settings": {
      "url": "devices/component",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "speed": {
      "type": "number",
      "unitCode": "MHZ",
      "min": 1,
      "sink": -1
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "erasures": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "events",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "benchmarks": {
      "type": "list",
      "readonly": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "required": true,
            "teaser": false,
            "allowed": [
              "BenchmarkProcessor"
            ]
          },
          "score": {
            "type": "float"
          },
          "created": {
            "doc": "Sets the _created and _updated, thought to be used in imports.",
            "type": "datetime",
            "writeonly": true,
            "dh_allowed_write_roles": "superuser"
          }
        }
      }
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "memory": {
      "type": "float",
      "unitCode": "4L",
      "min": 1,
      "sink": 3
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    }
  },
  "devices_to-repair": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:ToRepair"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/to-repair",
      "fa": "fa-chain-broken",
      "short_description": "The devices need repairing",
      "use_default_database": false,
      "sink": 0
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_register": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "components": {
      "type": [
        "list",
        "string"
      ],
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Register"
      ]
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "description": "Where did it happened",
      "sink": 0
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "device": {
      "type": [
        "dict",
        "string"
      ],
      "data_relation": {
        "resource": "devices",
        "field": "_id",
        "embeddable": true
      }
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "_id": {
      "type": "objectid"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/register",
      "fa": "fa-plus",
      "short_description": "The creation of a new device in the system.",
      "use_default_database": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    }
  },
  "computer": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "totalHardDriveSize": {
      "type": "float",
      "default": 0,
      "sink": 1,
      "short": "Capacity",
      "unitCode": "4L",
      "description": "The total amount of hard-drive capacity the computer has.",
      "materialized": true
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "totalRamSize": {
      "type": "float",
      "short": "RAM",
      "sink": 1,
      "doc": "It is updated after a Register, Add o Remove",
      "default": 0,
      "unitCode": "E34",
      "description": "The total amount of RAM memory the computer has.",
      "materialized": true
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Computer"
      ]
    },
    "forceCreation": {
      "type": "boolean",
      "default": false
    },
    "type": {
      "type": "string",
      "allowed": [
        "Microtower",
        "Netbook",
        "Server",
        "Desktop",
        "Laptop"
      ]
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_settings": {
      "url": "devices/computer",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "processorModel": {
      "sink": 1,
      "type": "string",
      "short": "CPU",
      "description": "The model of the processor.",
      "materialized": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    }
  },
  "output-lot": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "OutputLot"
      ]
    },
    "_settings": {
      "url": "lots/output-lot",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "to": {
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "get_from_data_relation_or_create": "email",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "policies": {
      "type": "dict",
      "schema": {
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "type": "dict",
          "schema": {
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ]
            },
            "startDate": {
              "type": "datetime"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "allowed": [
            "Policies"
          ],
          "teaser": false,
          "required": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Write here any custom policy or message you want other users to see.",
          "maxlength": 500
        },
        "dataDestruction": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "mechanical": {
              "type": "boolean"
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ]
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "eraseBasic": {
              "type": "boolean"
            }
          }
        },
        "authorizedRefubrishers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "authorizedResellers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "notifyPolicy": {
          "type": "dict",
          "schema": {
            "refurbisherLocation": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "reseller": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "receiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "refurbisherTipology": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRepaired": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "recycler": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "endReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "startReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "nonResponseOfReceiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "disposal": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "deliveryNote": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeReused": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "socialImpact": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRecycled": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            }
          }
        },
        "finalDisposal": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "returnToReseller": {
              "type": "boolean"
            },
            "returnToCircuit": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "parents": {
      "type": "dict",
      "schema": {
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    }
  },
  "mobile": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "required": true,
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "required": true,
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "required": true,
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Mobile"
      ]
    },
    "imei": {
      "unique": true,
      "type": "string"
    },
    "type": {
      "type": "string",
      "required": true,
      "allowed": [
        "Smartphone",
        "Tablet"
      ]
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "_settings": {
      "url": "devices/mobile",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "meid": {
      "unique": true,
      "type": "string"
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    }
  },
  "devices_to-prepare": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:ToPrepare"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/to-prepare",
      "fa": "fa-wrench",
      "short_description": "The devices need some maintenance, some kind of testing or preparation to be ready",
      "use_default_database": false,
      "sink": 1
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_receive": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "receiverOrganization": {
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "_settings": {
      "url": "events/devices/receive",
      "fa": "fa-cart-arrow-down",
      "short_description": "Someone receives the devices: you, a transporter, the client...",
      "use_default_database": false,
      "sink": -7
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "receiver": {
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "required": true,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Receive"
      ]
    },
    "place": {
      "type": "objectid",
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "places",
        "field": "_id",
        "embeddable": true
      },
      "description": "Where did it happened",
      "sink": 0
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "type": {
      "type": "string",
      "allowed": [
        "FinalUser",
        "CollectionPoint",
        "RecyclingPoint"
      ],
      "required": true
    },
    "components": {
      "type": "list",
      "description": "Components affected by the event.",
      "readonly": true,
      "teaser": false,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "_id": {
      "type": "objectid"
    }
  },
  "peripheral": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "required": true,
      "sink": 4
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "required": true,
      "sink": 4
    },
    "pid": {
      "unique": true,
      "type": "string",
      "sink": 5
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "required": true,
      "sink": 4
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "owners": {
      "type": "list",
      "sink": 2,
      "materialized": true,
      "schema": {
        "type": "objectid",
        "data_relation": {
          "resource": "accounts",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "hid": {
      "type": "hid",
      "short": "HID",
      "teaser": false,
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Peripheral"
      ]
    },
    "type": {
      "type": "string",
      "required": true,
      "allowed": [
        "Mouse",
        "Keyboard",
        "Scanner",
        "Router",
        "Terminal",
        "HUB",
        "MultifunctionPrinter",
        "Switch",
        "SAI",
        "Printer"
      ]
    },
    "events": {
      "type": "list",
      "materialized": true,
      "schema": {
        "type": "dict"
      }
    },
    "_id": {
      "unique": true,
      "type": "string",
      "device_id": true,
      "teaser": false,
      "short": "ID",
      "sink": 4
    },
    "_settings": {
      "url": "devices/peripheral",
      "icon": "devices/icons/",
      "use_default_database": false
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "components": {
      "type": "list",
      "default": [],
      "sink": 1,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    }
  },
  "abstract": {
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Lot",
        "InputLot",
        "Abstract",
        "OutputLot"
      ]
    },
    "_settings": {
      "url": "group/abstract",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "to": {
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "get_from_data_relation_or_create": "email",
      "sink": 2,
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "schema": {
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      }
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "toOrganization": {
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in.",
      "type": "string",
      "readonly": true,
      "materialized": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "parents": {
      "type": "dict",
      "schema": {
        "places": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "_from": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "sink": 2
    },
    "policies": {
      "type": "dict",
      "schema": {
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "type": "dict",
          "schema": {
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ]
            },
            "startDate": {
              "type": "datetime"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "created": {
          "doc": "Sets the _created and _updated, thought to be used in imports.",
          "type": "datetime",
          "writeonly": true,
          "dh_allowed_write_roles": "superuser"
        },
        "@type": {
          "type": "string",
          "allowed": [
            "Policies"
          ],
          "teaser": false,
          "required": true
        },
        "description": {
          "type": "string",
          "sink": -4,
          "description": "Write here any custom policy or message you want other users to see.",
          "maxlength": 500
        },
        "dataDestruction": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "mechanical": {
              "type": "boolean"
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ]
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "eraseBasic": {
              "type": "boolean"
            }
          }
        },
        "authorizedRefubrishers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "authorizedResellers": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "to": {
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "required": true,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "sink": 2,
              "data_relation": {
                "resource": "accounts",
                "field": "_id",
                "embeddable": true
              },
              "schema": {
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              }
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "cooperative": {
              "type": "boolean"
            }
          }
        },
        "url": {
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "type": "url",
          "move": "sameAs",
          "teaser": false
        },
        "notifyPolicy": {
          "type": "dict",
          "schema": {
            "refurbisherLocation": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "reseller": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "receiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "refurbisherTipology": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRepaired": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "recycler": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "endReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "startReuseTime": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "nonResponseOfReceiver": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "disposal": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "deliveryNote": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeReused": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "socialImpact": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            },
            "devicesSetToBeRecycled": {
              "type": "dict",
              "schema": {
                "endDate": {
                  "type": "datetime"
                },
                "to": {
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "required": true,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "sink": 2,
                  "data_relation": {
                    "resource": "accounts",
                    "field": "_id",
                    "embeddable": true
                  },
                  "schema": {
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "created": {
                  "doc": "Sets the _created and _updated, thought to be used in imports.",
                  "type": "datetime",
                  "writeonly": true,
                  "dh_allowed_write_roles": "superuser"
                },
                "@type": {
                  "type": "string",
                  "required": true,
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ]
                },
                "url": {
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "type": "url",
                  "move": "sameAs",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "description": {
                  "type": "string",
                  "sink": -4,
                  "description": "Full long description",
                  "maxlength": 500
                }
              }
            }
          }
        },
        "finalDisposal": {
          "type": "dict",
          "schema": {
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "description": {
              "type": "string",
              "sink": -4,
              "description": "Full long description",
              "maxlength": 500
            },
            "created": {
              "doc": "Sets the _created and _updated, thought to be used in imports.",
              "type": "datetime",
              "writeonly": true,
              "dh_allowed_write_roles": "superuser"
            },
            "@type": {
              "type": "string",
              "required": true,
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ]
            },
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "url": {
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "type": "url",
              "move": "sameAs",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "returnToReseller": {
              "type": "boolean"
            },
            "returnToCircuit": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "_id": {
      "type": "objectid"
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    }
  },
  "packages": {
    "weight": {
      "type": "float",
      "unitCode": "KGM",
      "teaser": false,
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "Package"
      ]
    },
    "depth": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "_settings": {
      "url": "packages",
      "use_default_database": false
    },
    "children": {
      "type": "dict",
      "default": {},
      "schema": {
        "packages": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "packages",
              "field": "label",
              "embeddable": true
            }
          }
        },
        "devices": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "components": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "devices",
              "field": "_id",
              "embeddable": true
            }
          }
        },
        "lots": {
          "type": "list",
          "unique_values": true,
          "schema": {
            "type": "string",
            "data_relation": {
              "resource": "lots",
              "field": "label",
              "embeddable": true
            }
          }
        }
      }
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "width": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "label": {
      "unique": true,
      "type": "string",
      "required": true,
      "description": "A short, descriptive title",
      "sink": 5
    },
    "height": {
      "type": "float",
      "unitCode": "MTR",
      "teaser": false,
      "sink": -1
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "ancestors": {
      "type": "list",
      "default": [],
      "materialized": true,
      "schema": {
        "type": "dict",
        "schema": {
          "lots": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "lots",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "packages": {
            "type": "list",
            "unique_values": true,
            "schema": {
              "type": "string",
              "data_relation": {
                "resource": "packages",
                "field": "label",
                "embeddable": true
              }
            }
          },
          "places": {
            "type": "string",
            "data_relation": {
              "resource": "places",
              "field": "label",
              "embeddable": true
            }
          },
          "label": {
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent.",
            "type": "string"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "InputLot",
              "Lot",
              "OutputLot",
              "Package",
              "Place"
            ]
          }
        }
      }
    },
    "byUser": {
      "type": "objectid",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "readonly": true
    },
    "_id": {
      "type": "objectid"
    }
  },
  "devices_repair": {
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "devices": {
      "type": "list",
      "required": true,
      "schema": {
        "type": "string",
        "data_relation": {
          "resource": "devices",
          "field": "_id",
          "embeddable": true
        }
      }
    },
    "created": {
      "doc": "Sets the _created and _updated, thought to be used in imports.",
      "type": "datetime",
      "writeonly": true,
      "dh_allowed_write_roles": "superuser"
    },
    "@type": {
      "type": "string",
      "required": true,
      "teaser": false,
      "allowed": [
        "devices:Repair"
      ]
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "type": "string",
      "sink": -4,
      "description": "Full long description",
      "maxlength": 500
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_settings": {
      "url": "events/devices/repair",
      "fa": "fa-chain-broken",
      "short_description": "The devices have been succesfully repaired",
      "use_default_database": false,
      "sink": -1
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "url": {
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "type": "url",
      "move": "sameAs",
      "teaser": false
    },
    "byUser": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "coerce_with_context": "<callable>",
      "data_relation": {
        "resource": "accounts",
        "field": "_id",
        "embeddable": true
      },
      "type": "objectid",
      "sink": 2
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "_id": {
      "type": "objectid"
    }
  }
}
