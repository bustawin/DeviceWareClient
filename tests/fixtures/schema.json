{
  "packages": {
    "label": {
      "type": "string",
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Physical",
      "url": "packages",
      "fa": "fa-archive",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Package"
      ],
      "required": true
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "depth": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "component": {
    "_settings": {
      "itemMethods": [],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/component",
      "icon": "devices/icons/",
      "resourceMethods": []
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "numberOfCores": {
      "min": 1,
      "type": "integer",
      "sink": 1
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "erasure": {
      "schema": {
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "startingTime": {
          "type": "datetime"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "success": {
          "type": "boolean"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "steps": {
          "schema": {
            "schema": {
              "cleanWithZeros": {
                "type": "boolean"
              },
              "success": {
                "type": "boolean",
                "required": true
              },
              "endingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "allowed": [
                  "Random",
                  "Zeros"
                ],
                "required": true
              },
              "startingTime": {
                "type": "datetime"
              },
              "secureRandomSteps": {
                "type": "boolean"
              }
            },
            "type": "dict"
          },
          "type": "list"
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "endingTime": {
          "type": "datetime"
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:EraseSectors",
            "devices:EraseBasic"
          ],
          "required": true
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "size": {
      "min": 1,
      "type": "number",
      "unitCode": "4L",
      "sink": 1
    },
    "address": {
      "type": "integer",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ],
      "unitCode": "A99",
      "sink": -1
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "tests": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "memory": {
      "min": 1,
      "type": "float",
      "unitCode": "4L",
      "sink": 3
    },
    "benchmark": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "score": {
          "type": "float"
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "BenchmarkHardDrive",
            "BenchmarkProcessor"
          ],
          "required": true
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "erasures": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "speed": {
      "min": 1,
      "type": "number",
      "unitCode": "MHZ",
      "sink": -1
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "connectors": {
      "schema": {
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "pcmcia": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      },
      "type": "dict"
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "benchmarks": {
      "schema": {
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "teaser": false,
            "allowed": [
              "BenchmarkHardDrive"
            ],
            "required": true
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "created": {
            "writeonly": true,
            "type": "datetime",
            "dh_allowed_write_roles": "superuser",
            "doc": "Sets the _created and _updated, thought to be used in imports."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "readonly": true
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "firmwareRevision": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "RamModule",
        "Component",
        "OpticalDrive",
        "GraphicCard",
        "NetworkAdapter",
        "HardDrive",
        "Processor",
        "SoundCard",
        "Motherboard"
      ],
      "required": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "test": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "events"
          }
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "lifetime": {
          "type": "integer"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_live": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "parent": "devices:EventWithOneDevice",
      "url": "events/devices/live",
      "fa": "fa-bookmark-o",
      "resourceMethods": [
        "POST"
      ]
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "userType": {
      "type": "string",
      "readonly": true
    },
    "organization": {
      "type": "string",
      "readonly": true
    },
    "_id": {
      "type": "objectid"
    },
    "administrativeArea": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "AdministrativeArea"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "ip": {
      "type": "string",
      "readonly": true
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Live"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "isp": {
      "type": "string",
      "readonly": true
    },
    "continent": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Continent"
          ],
          "required": true
        },
        "geoipCode": {
          "type": "string",
          "description": "The GEOIP Code"
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "country": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Country"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "device": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "city": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "City"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "autonomousSystemNumber": {
      "type": "natural",
      "readonly": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_erase-basic": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "success": {
      "type": "boolean"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "Fast erasure of the HardDrive",
      "url": "events/devices/erase-basic",
      "fa": "fa-eraser",
      "resourceMethods": [
        "POST"
      ]
    },
    "endingTime": {
      "type": "datetime"
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "steps": {
      "schema": {
        "schema": {
          "cleanWithZeros": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean",
            "required": true
          },
          "endingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "Random",
              "Zeros"
            ],
            "required": true
          },
          "startingTime": {
            "type": "datetime"
          },
          "secureRandomSteps": {
            "type": "boolean"
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:EraseSectors",
        "devices:EraseBasic"
      ],
      "required": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "parent": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "materialized": true,
      "type": "string",
      "description": "The event triggered in this computer."
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "device": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "startingTime": {
      "type": "datetime"
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_device-event": {
    "cleanWithZeros": {
      "type": "boolean"
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "userType": {
      "type": "string",
      "readonly": true
    },
    "from": {
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "excludes": "to",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "_id": {
      "type": "objectid"
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "endingTime": {
      "type": "datetime"
    },
    "tests": {
      "schema": {
        "schema": {
          "elapsed": {
            "type": "time"
          },
          "success": {
            "type": "boolean"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "StressTest"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:TestHardDrive",
        "devices:Add",
        "devices:Free",
        "devices:Dispose",
        "devices:DeviceEvent",
        "devices:Migrate",
        "devices:EraseSectors",
        "devices:EventWithOneDevice",
        "devices:EraseBasic",
        "devices:ToDispose",
        "devices:Live",
        "devices:EventWithDevices",
        "devices:Register",
        "devices:Allocate",
        "devices:Ready",
        "devices:Receive",
        "devices:ToRepair",
        "devices:ToPrepare",
        "devices:Repair",
        "devices:Deallocate",
        "devices:Remove",
        "devices:Snapshot",
        "devices:Locate"
      ],
      "required": true
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "geo": {
      "or": [
        "place"
      ],
      "type": "point",
      "excludes": "place",
      "description": "Where did it happened",
      "sink": -5
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "automatic": {
      "type": "boolean"
    },
    "isp": {
      "type": "string",
      "readonly": true
    },
    "to": {
      "or": [
        "from"
      ],
      "schema": {
        "database": {
          "type": "string",
          "doc": "The name of the database as in the URL",
          "required": true
        },
        "baseUrl": {
          "type": "url",
          "doc": "The scheme, domain, any path to reach the DeviceHub.",
          "required": true
        },
        "url": {
          "type": "url",
          "readonly": true,
          "doc": "The URL of the Migrate in the other database."
        }
      },
      "type": "dict",
      "excludes": "from"
    },
    "software": {
      "schema": {
        "productKey": {
          "type": "string"
        }
      },
      "type": "dict",
      "sink": -1
    },
    "place": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "places"
      },
      "type": "string",
      "description": "Where did it happened",
      "sink": 0
    },
    "returnedSameAs": {
      "valueschema": {
        "valueschema": [
          "type",
          "url"
        ],
        "type": "list"
      },
      "readonly": true,
      "propertyschema": {
        "type": "url"
      },
      "type": "dict",
      "writeonly": true,
      "excludes": "to",
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions."
    },
    "steps": {
      "schema": {
        "schema": {
          "cleanWithZeros": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean",
            "required": true
          },
          "endingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "Random",
              "Zeros"
            ],
            "required": true
          },
          "startingTime": {
            "type": "datetime"
          },
          "secureRandomSteps": {
            "type": "boolean"
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "unsecured": {
      "schema": {
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "model",
              "pid"
            ]
          },
          "@type": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          }
        },
        "type": "dict"
      },
      "readonly": true,
      "type": "list",
      "default": []
    },
    "country": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Country"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "offline": {
      "type": "boolean"
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "doc": "This is not the same as the materialized \"parent\" field. This field can be set when snapshotting a component, for example through Scan, that should be included in a device."
    },
    "device": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "placeholder_disallowed": true,
      "type": "string"
    },
    "date": {
      "type": "datetime"
    },
    "city": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "City"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "autonomousSystemNumber": {
      "type": "natural",
      "readonly": true
    },
    "startingTime": {
      "type": "datetime"
    },
    "organization": {
      "type": "string",
      "readonly": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "lifetime": {
      "type": "integer"
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "events"
      }
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "success": {
      "type": "boolean"
    },
    "devices": {
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "required": true
    },
    "type": {
      "type": "string",
      "allowed": [
        "RecyclingPoint",
        "CollectionPoint",
        "FinalUser"
      ],
      "required": true
    },
    "inventory": {
      "schema": {
        "elapsed": {
          "type": "time"
        }
      },
      "type": "dict"
    },
    "elapsed": {
      "type": "time"
    },
    "receiver": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "sink": 2,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "required": true
    },
    "administrativeArea": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "AdministrativeArea"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "status": {
      "type": "string",
      "required": true
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "version": {
      "type": "version",
      "teaser": false
    },
    "ip": {
      "type": "string",
      "readonly": true
    },
    "receiverOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in."
    },
    "continent": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Continent"
          ],
          "required": true
        },
        "geoipCode": {
          "type": "string",
          "description": "The GEOIP Code"
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "osInstallation": {
      "schema": {
        "label": {
          "type": "string"
        },
        "elapsed": {
          "type": "time"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "dict"
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "request": {
      "type": "string",
      "readonly": true,
      "doc": "The whole Snapshot saved in case for debugging"
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "Workbench",
      "allowed": [
        "Workbench",
        "AndroidApp",
        "Web",
        "WorkbenchAuto"
      ]
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "condition": {
      "schema": {
        "functionality": {
          "schema": {
            "general": {
              "description": "Grades the defects of a device that affect its usage.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ],
              "allowed_description": {
                "B": "B. There is a button difficult to press or a small scratch in an edge of a screen",
                "C": "C. A non-important button (or similar) doesn't work; screen has multiple scratches in edges",
                "D": "D. Multiple buttons don't work; screen has visual damage resulting in uncomfortable usage",
                "A": "A. Everything works perfectly (buttons, and in case of screens there are no scratches)"
              }
            }
          },
          "type": "dict"
        },
        "appearance": {
          "schema": {
            "general": {
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "type": "string",
              "allowed": [
                "0",
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "C": "C. Is in good condition (small visual damage in parts that are easy to spot, not on screens)",
                "B": "B. Is in really good condition (small visual damage in difficult places to spot)",
                "0": "0. The device is new",
                "E": "E. Is unacceptable (considerable visual damage that can affect usage)",
                "D": "D. Is acceptable (visual damage in visible parts, not on screens)",
                "A": "A. Is like new (without visual damage)"
              }
            }
          },
          "type": "dict"
        },
        "labelling": {
          "type": "boolean",
          "default": false,
          "description": "Sets if there are labels stuck that should be removed."
        },
        "bios": {
          "schema": {
            "general": {
              "description": "How difficult it has been to set the bios to boot from the network.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "B": "B. You had to get into the BIOS, and in less than 5 steps you could set the network boot",
                "C": "C. Like B, but with more than 5 steps",
                "D": "D. Like B or C, but you had to unlock the BIOS (i.e. by removing the battery)",
                "E": "E. The device could not be booted through the network.",
                "A": "A. If by pressing a key you could access a boot menu with the network boot"
              }
            }
          },
          "type": "dict"
        }
      },
      "type": "dict",
      "teaser": true,
      "sink": 1
    },
    "deviceIsNew": {
      "type": "boolean",
      "default": false,
      "doc": "Note that prior may 2017 this value is None for everyone."
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "parent": "Event",
      "url": "events/devices",
      "fa": "fa-bookmark-o",
      "resourceMethods": [
        "GET"
      ]
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true,
      "description": "The events triggered by the Snapshot."
    },
    "autoUploaded": {
      "type": "boolean",
      "default": false
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "modifiable": false,
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "television-set": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/television-set",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "required": true,
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Plasma",
        "OLED",
        "LED",
        "LCD",
        "CRT"
      ],
      "required": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "required": true,
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "TelevisionSet"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "required": true,
      "short": "S/N",
      "sink": 4
    },
    "inches": {
      "type": "natural"
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "places": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "geo": {
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "modifiable": false,
      "sink": -5
    },
    "telephone": {
      "type": "string"
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "type": {
      "type": "string",
      "allowed": [
        "Department",
        "Zone",
        "CollectionPoint",
        "Warehouse"
      ]
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Physical",
      "url": "places",
      "fa": "fa-map-marker",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "places": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "pallets": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "pallets"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "address": {
      "schema": {
        "addressCountry": {
          "allowed_description": [
            "Andorra",
            "United Arab Emirates",
            "Afghanistan",
            "Antigua and Barbuda",
            "Anguilla",
            "Albania",
            "Armenia",
            "Angola",
            "Antarctica",
            "Argentina",
            "American Samoa",
            "Austria",
            "Australia",
            "Aruba",
            "\u00c5land Islands",
            "Azerbaijan",
            "Bosnia and Herzegovina",
            "Barbados",
            "Bangladesh",
            "Belgium",
            "Burkina Faso",
            "Bulgaria",
            "Bahrain",
            "Burundi",
            "Benin",
            "Saint Barth\u00e9lemy",
            "Bermuda",
            "Brunei Darussalam",
            "Bolivia, Plurinational State of",
            "Bonaire, Sint Eustatius and Saba",
            "Brazil",
            "Bahamas",
            "Bhutan",
            "Bouvet Island",
            "Botswana",
            "Belarus",
            "Belize",
            "Canada",
            "Cocos (Keeling) Islands",
            "Congo, Democratic Republic of the",
            "Central African Republic",
            "Congo",
            "Switzerland",
            "C\u00f4te d'Ivoire",
            "Cook Islands",
            "Chile",
            "Cameroon",
            "China",
            "Colombia",
            "Costa Rica",
            "Cuba",
            "Cabo Verde",
            "Cura\u00e7ao",
            "Christmas Island",
            "Cyprus",
            "Czech Republic",
            "Germany",
            "Djibouti",
            "Denmark",
            "Dominica",
            "Dominican Republic",
            "Algeria",
            "Ecuador",
            "Estonia",
            "Egypt",
            "Western Sahara",
            "Eritrea",
            "Spain",
            "Ethiopia",
            "Finland",
            "Fiji",
            "Falkland Islands (Malvinas)",
            "Micronesia, Federated States of",
            "Faroe Islands",
            "France",
            "Gabon",
            "United Kingdom",
            "Grenada",
            "Georgia",
            "French Guiana",
            "Guernsey",
            "Ghana",
            "Gibraltar",
            "Greenland",
            "Gambia",
            "Guinea",
            "Guadeloupe",
            "Equatorial Guinea",
            "Greece",
            "South Georgia and the South Sandwich Islands",
            "Guatemala",
            "Guam",
            "Guinea-Bissau",
            "Guyana",
            "Hong Kong",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Croatia",
            "Haiti",
            "Hungary",
            "Indonesia",
            "Ireland",
            "Israel",
            "Isle of Man",
            "India",
            "British Indian Ocean Territory",
            "Iraq",
            "Iran, Islamic Republic of",
            "Iceland",
            "Italy",
            "Jersey",
            "Jamaica",
            "Jordan",
            "Japan",
            "Kenya",
            "Kyrgyzstan",
            "Cambodia",
            "Kiribati",
            "Comoros",
            "Saint Kitts and Nevis",
            "Korea, Democratic People's Republic of",
            "Korea, Republic of",
            "Kuwait",
            "Cayman Islands",
            "Kazakhstan",
            "Lao People's Democratic Republic",
            "Lebanon",
            "Saint Lucia",
            "Liechtenstein",
            "Sri Lanka",
            "Liberia",
            "Lesotho",
            "Lithuania",
            "Luxembourg",
            "Latvia",
            "Libya",
            "Morocco",
            "Monaco",
            "Moldova, Republic of",
            "Montenegro",
            "Saint Martin (French part)",
            "Madagascar",
            "Marshall Islands",
            "Macedonia, the former Yugoslav Republic of",
            "Mali",
            "Myanmar",
            "Mongolia",
            "Macao",
            "Northern Mariana Islands",
            "Martinique",
            "Mauritania",
            "Montserrat",
            "Malta",
            "Mauritius",
            "Maldives",
            "Malawi",
            "Mexico",
            "Malaysia",
            "Mozambique",
            "Namibia",
            "New Caledonia",
            "Niger",
            "Norfolk Island",
            "Nigeria",
            "Nicaragua",
            "Netherlands",
            "Norway",
            "Nepal",
            "Nauru",
            "Niue",
            "New Zealand",
            "Oman",
            "Panama",
            "Peru",
            "French Polynesia",
            "Papua New Guinea",
            "Philippines",
            "Pakistan",
            "Poland",
            "Saint Pierre and Miquelon",
            "Pitcairn",
            "Puerto Rico",
            "Palestine, State of",
            "Portugal",
            "Palau",
            "Paraguay",
            "Qatar",
            "R\u00e9union",
            "Romania",
            "Serbia",
            "Russian Federation",
            "Rwanda",
            "Saudi Arabia",
            "Solomon Islands",
            "Seychelles",
            "Sudan",
            "Sweden",
            "Singapore",
            "Saint Helena, Ascension and Tristan da Cunha",
            "Slovenia",
            "Svalbard and Jan Mayen",
            "Slovakia",
            "Sierra Leone",
            "San Marino",
            "Senegal",
            "Somalia",
            "Suriname",
            "South Sudan",
            "Sao Tome and Principe",
            "El Salvador",
            "Sint Maarten (Dutch part)",
            "Syrian Arab Republic",
            "Swaziland",
            "Turks and Caicos Islands",
            "Chad",
            "French Southern Territories",
            "Togo",
            "Thailand",
            "Tajikistan",
            "Tokelau",
            "Timor-Leste",
            "Turkmenistan",
            "Tunisia",
            "Tonga",
            "Turkey",
            "Trinidad and Tobago",
            "Tuvalu",
            "Taiwan, Province of China",
            "Tanzania, United Republic of",
            "Ukraine",
            "Uganda",
            "United States Minor Outlying Islands",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Holy See",
            "Saint Vincent and the Grenadines",
            "Venezuela, Bolivarian Republic of",
            "Virgin Islands, British",
            "Virgin Islands, U.S.",
            "Viet Nam",
            "Vanuatu",
            "Wallis and Futuna",
            "Samoa",
            "Yemen",
            "Mayotte",
            "South Africa",
            "Zambia",
            "Zimbabwe"
          ],
          "description": "The name of the country",
          "type": "string",
          "allowed": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "doc": "The addressCountry as per ISO 3166 (2 characters)."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        }
      },
      "type": "dict",
      "sink": -4
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "places"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Place"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "computer-monitor": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/computer-monitor",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "required": true,
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "OLED",
        "LED",
        "LCD",
        "TFT"
      ],
      "required": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "required": true,
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "ComputerMonitor"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "required": true,
      "short": "S/N",
      "sink": 4
    },
    "inches": {
      "type": "natural"
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_snapshot": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "place": {
      "label": "Place where the devices are saved",
      "data_relation": {
        "field": "_id",
        "resource": "places",
        "embeddable": true
      },
      "sink": 0,
      "type": "string",
      "description": "Place the devices to an existing location."
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "request": {
      "type": "string",
      "readonly": true,
      "doc": "The whole Snapshot saved in case for debugging"
    },
    "condition": {
      "schema": {
        "functionality": {
          "schema": {
            "general": {
              "description": "Grades the defects of a device that affect its usage.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ],
              "allowed_description": {
                "B": "B. There is a button difficult to press or a small scratch in an edge of a screen",
                "C": "C. A non-important button (or similar) doesn't work; screen has multiple scratches in edges",
                "D": "D. Multiple buttons don't work; screen has visual damage resulting in uncomfortable usage",
                "A": "A. Everything works perfectly (buttons, and in case of screens there are no scratches)"
              }
            }
          },
          "type": "dict"
        },
        "appearance": {
          "schema": {
            "general": {
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "type": "string",
              "allowed": [
                "0",
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "C": "C. Is in good condition (small visual damage in parts that are easy to spot, not on screens)",
                "B": "B. Is in really good condition (small visual damage in difficult places to spot)",
                "0": "0. The device is new",
                "E": "E. Is unacceptable (considerable visual damage that can affect usage)",
                "D": "D. Is acceptable (visual damage in visible parts, not on screens)",
                "A": "A. Is like new (without visual damage)"
              }
            }
          },
          "type": "dict"
        },
        "labelling": {
          "type": "boolean",
          "default": false,
          "description": "Sets if there are labels stuck that should be removed."
        },
        "bios": {
          "schema": {
            "general": {
              "description": "How difficult it has been to set the bios to boot from the network.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "B": "B. You had to get into the BIOS, and in less than 5 steps you could set the network boot",
                "C": "C. Like B, but with more than 5 steps",
                "D": "D. Like B or C, but you had to unlock the BIOS (i.e. by removing the battery)",
                "E": "E. The device could not be booted through the network.",
                "A": "A. If by pressing a key you could access a boot menu with the network boot"
              }
            }
          },
          "type": "dict"
        }
      },
      "type": "dict",
      "teaser": true,
      "sink": 1
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "from": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "label": "E-mail of the giver",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "readonly": true,
      "get_from_data_relation_or_create": "email",
      "description": "The e-mail of the person or organization that gave the devices. You cannot change this later.",
      "sink": 2,
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "Disabled for now as incoming lot provides this functionality, want to see if it is really needed."
    },
    "inventory": {
      "schema": {
        "elapsed": {
          "type": "time"
        }
      },
      "type": "dict"
    },
    "elapsed": {
      "type": "time"
    },
    "_id": {
      "type": "objectid"
    },
    "version": {
      "type": "version",
      "teaser": false
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "A fast picture of the state and key information of the computer and it's devices.",
      "url": "events/devices/snapshot",
      "fa": "fa-camera",
      "resourceMethods": [
        "POST"
      ]
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "tests": {
      "schema": {
        "schema": {
          "elapsed": {
            "type": "time"
          },
          "success": {
            "type": "boolean"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "StressTest"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "automatic": {
      "type": "boolean"
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "software": {
      "schema": {
        "productKey": {
          "type": "string"
        }
      },
      "type": "dict",
      "sink": -1
    },
    "components": {
      "schema": {
        "schema": {
          "sectors": {
            "type": "integer",
            "teaser": false,
            "sink": -1
          },
          "numberOfCores": {
            "min": 1,
            "type": "integer",
            "sink": 1
          },
          "width": {
            "type": "float",
            "teaser": false,
            "unitCode": "MTR",
            "sink": -1
          },
          "rid": {
            "unique": true,
            "externalSynthetic": true,
            "type": "string",
            "short": "RID",
            "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
            "uid": true
          },
          "erasure": {
            "schema": {
              "secured": {
                "type": "boolean",
                "sink": -3
              },
              "cleanWithZeros": {
                "type": "boolean"
              },
              "comment": {
                "type": "string",
                "description": "Short comment for fast and easy reading",
                "sink": -4
              },
              "startingTime": {
                "type": "datetime"
              },
              "sameAs": {
                "unique": true,
                "type": "list",
                "teaser": false
              },
              "success": {
                "type": "boolean"
              },
              "description": {
                "maxlength": 500,
                "type": "string",
                "description": "Full long description",
                "sink": -4
              },
              "geo": {
                "type": "point",
                "description": "Where did it happened",
                "sink": -5
              },
              "incidence": {
                "type": "boolean",
                "description": "Check if something went wrong, you can add details in a comment",
                "sink": -3
              },
              "steps": {
                "schema": {
                  "schema": {
                    "cleanWithZeros": {
                      "type": "boolean"
                    },
                    "success": {
                      "type": "boolean",
                      "required": true
                    },
                    "endingTime": {
                      "type": "datetime"
                    },
                    "@type": {
                      "type": "string",
                      "allowed": [
                        "Random",
                        "Zeros"
                      ],
                      "required": true
                    },
                    "startingTime": {
                      "type": "datetime"
                    },
                    "secureRandomSteps": {
                      "type": "boolean"
                    }
                  },
                  "type": "dict"
                },
                "type": "list"
              },
              "byOrganization": {
                "type": "string",
                "readonly": true
              },
              "device": {
                "type": "string",
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "devices"
                },
                "required": false
              },
              "byUser": {
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "accounts"
                },
                "sink": 2,
                "dh_allowed_write_roles": [
                  "admin",
                  "superuser"
                ],
                "type": "objectid",
                "coerce_with_context": "<callable>"
              },
              "parent": {
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "devices"
                },
                "materialized": true,
                "type": "string",
                "description": "The event triggered in this computer."
              },
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "endingTime": {
                "type": "datetime"
              },
              "date": {
                "type": "datetime",
                "description": "When this happened. Leave blank if it is happening now",
                "sink": -2
              },
              "secureRandomSteps": {
                "type": "natural",
                "required": true
              },
              "@type": {
                "type": "string",
                "teaser": false,
                "allowed": [
                  "devices:EraseSectors",
                  "devices:EraseBasic"
                ],
                "required": true
              },
              "created": {
                "writeonly": true,
                "type": "datetime",
                "dh_allowed_write_roles": "superuser",
                "doc": "Sets the _created and _updated, thought to be used in imports."
              },
              "url": {
                "type": "url",
                "move": "sameAs",
                "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                "teaser": false
              }
            },
            "type": "dict",
            "writeonly": true
          },
          "placeholder": {
            "type": "boolean",
            "default": false,
            "doc": "Invalid for components."
          },
          "_id": {
            "device_id": true,
            "unique": true,
            "type": "string",
            "uid": true,
            "short": "ID",
            "description": "The System ID, or simply ID, is an easy-to-read internal id.",
            "sink": 4
          },
          "size": {
            "min": 1,
            "type": "number",
            "unitCode": "4L",
            "sink": 1
          },
          "address": {
            "type": "integer",
            "allowed": [
              256,
              128,
              64,
              32,
              8,
              16
            ],
            "unitCode": "A99",
            "sink": -1
          },
          "blockSize": {
            "type": "integer",
            "teaser": false,
            "sink": -1
          },
          "tests": {
            "schema": {
              "type": "objectid",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "events"
              }
            },
            "type": "list",
            "readonly": true
          },
          "memory": {
            "min": 1,
            "type": "float",
            "unitCode": "4L",
            "sink": 3
          },
          "benchmark": {
            "schema": {
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "score": {
                "type": "float"
              },
              "writingSpeed": {
                "type": "float",
                "unitCode": "4L"
              },
              "readingSpeed": {
                "type": "float",
                "unitCode": "4L"
              },
              "created": {
                "writeonly": true,
                "type": "datetime",
                "dh_allowed_write_roles": "superuser",
                "doc": "Sets the _created and _updated, thought to be used in imports."
              },
              "@type": {
                "type": "string",
                "teaser": false,
                "allowed": [
                  "BenchmarkHardDrive",
                  "BenchmarkProcessor"
                ],
                "required": true
              }
            },
            "type": "dict",
            "writeonly": true
          },
          "usedSlots": {
            "type": "integer",
            "teaser": false
          },
          "components": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "devices"
              }
            },
            "type": "list",
            "default": [],
            "sink": 1
          },
          "created": {
            "writeonly": true,
            "type": "datetime",
            "dh_allowed_write_roles": "superuser",
            "doc": "Sets the _created and _updated, thought to be used in imports."
          },
          "parent": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "erasures": {
            "schema": {
              "type": "objectid",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "events"
              }
            },
            "type": "list",
            "readonly": true
          },
          "height": {
            "type": "float",
            "teaser": false,
            "unitCode": "MTR",
            "sink": -1
          },
          "sameAs": {
            "unique": true,
            "type": "list",
            "teaser": false
          },
          "totalSlots": {
            "type": "integer",
            "teaser": false
          },
          "manufacturer": {
            "type": "string",
            "short": "Man.",
            "sink": 4
          },
          "speed": {
            "min": 1,
            "type": "number",
            "unitCode": "MHZ",
            "sink": -1
          },
          "model": {
            "type": "string",
            "short": "Mod.",
            "sink": 4
          },
          "connectors": {
            "schema": {
              "serial": {
                "type": "natural"
              },
              "usb": {
                "type": "natural"
              },
              "pcmcia": {
                "type": "natural"
              },
              "firewire": {
                "type": "natural"
              }
            },
            "type": "dict"
          },
          "pid": {
            "unique": true,
            "externalSynthetic": true,
            "type": "string",
            "uid": true,
            "short": "PID",
            "description": "The PID identifies a device under a circuit or platform.",
            "sink": 5
          },
          "weight": {
            "type": "float",
            "teaser": false,
            "unitCode": "KGM",
            "sink": -1
          },
          "gid": {
            "unique": true,
            "externalSynthetic": true,
            "type": "string",
            "short": "GID",
            "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
            "uid": true
          },
          "productId": {
            "type": "string",
            "teaser": false,
            "sink": 3
          },
          "owners": {
            "schema": {
              "type": "objectid",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              }
            },
            "type": "list",
            "materialized": true,
            "sink": 2
          },
          "ancestors": {
            "schema": {
              "schema": {
                "places": {
                  "type": "string",
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "places"
                  }
                },
                "packages": {
                  "schema": {
                    "type": "string",
                    "data_relation": {
                      "field": "_id",
                      "embeddable": true,
                      "resource": "packages"
                    }
                  },
                  "unique_values": true,
                  "type": "list"
                },
                "lots": {
                  "schema": {
                    "type": "string",
                    "data_relation": {
                      "field": "_id",
                      "embeddable": true,
                      "resource": "lots"
                    }
                  },
                  "unique_values": true,
                  "type": "list"
                },
                "pallets": {
                  "schema": {
                    "type": "string",
                    "data_relation": {
                      "field": "_id",
                      "embeddable": true,
                      "resource": "pallets"
                    }
                  },
                  "unique_values": true,
                  "type": "list"
                },
                "_id": {
                  "type": "string",
                  "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
                },
                "@type": {
                  "type": "string",
                  "allowed": [
                    "IncomingLot",
                    "Lot",
                    "Package",
                    "Place",
                    "OutgoingLot"
                  ]
                }
              },
              "type": "dict"
            },
            "type": "list",
            "materialized": true,
            "default": []
          },
          "labelId": {
            "type": "string",
            "short": "Label",
            "sink": 5
          },
          "benchmarks": {
            "schema": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "readingSpeed": {
                  "type": "float",
                  "unitCode": "4L"
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "BenchmarkHardDrive"
                  ],
                  "required": true
                },
                "writingSpeed": {
                  "type": "float",
                  "unitCode": "4L"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                }
              },
              "type": "dict"
            },
            "type": "list",
            "readonly": true
          },
          "interface": {
            "type": "string",
            "teaser": false,
            "sink": -1
          },
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "events": {
            "schema": {
              "type": "dict"
            },
            "type": "list",
            "materialized": true,
            "description": "A list of events where the first one is the most recent.",
            "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
          },
          "isUidSecured": {
            "type": "boolean",
            "default": true,
            "teaser": false
          },
          "firmwareRevision": {
            "type": "string",
            "sink": -1,
            "teaser": false
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "@type": {
            "type": "string",
            "teaser": false,
            "allowed": [
              "RamModule",
              "Component",
              "OpticalDrive",
              "GraphicCard",
              "NetworkAdapter",
              "HardDrive",
              "Processor",
              "SoundCard",
              "Motherboard"
            ],
            "required": true
          },
          "serialNumber": {
            "type": "string",
            "short": "S/N",
            "sink": 4
          },
          "test": {
            "schema": {
              "label": {
                "type": "string",
                "description": "A short, descriptive title",
                "sink": 5
              },
              "secured": {
                "type": "boolean",
                "sink": -3
              },
              "comment": {
                "type": "string",
                "description": "Short comment for fast and easy reading",
                "sink": -4
              },
              "url": {
                "type": "url",
                "move": "sameAs",
                "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                "teaser": false
              },
              "geo": {
                "type": "point",
                "description": "Where did it happened",
                "sink": -5
              },
              "incidence": {
                "type": "boolean",
                "description": "Check if something went wrong, you can add details in a comment",
                "sink": -3
              },
              "type": {
                "type": "string"
              },
              "snapshot": {
                "type": "objectid",
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "events"
                }
              },
              "firstError": {
                "type": "integer",
                "nullable": true
              },
              "byOrganization": {
                "type": "string",
                "readonly": true
              },
              "byUser": {
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "accounts"
                },
                "sink": 2,
                "dh_allowed_write_roles": [
                  "admin",
                  "superuser"
                ],
                "type": "objectid",
                "coerce_with_context": "<callable>"
              },
              "error": {
                "type": "boolean",
                "required": true
              },
              "parent": {
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "devices"
                },
                "materialized": true,
                "type": "string",
                "description": "The event triggered in this computer."
              },
              "status": {
                "type": "string",
                "required": true
              },
              "device": {
                "type": "string",
                "data_relation": {
                  "field": "_id",
                  "embeddable": true,
                  "resource": "devices"
                },
                "required": false
              },
              "date": {
                "type": "datetime",
                "description": "When this happened. Leave blank if it is happening now",
                "sink": -2
              },
              "lifetime": {
                "type": "integer"
              },
              "@type": {
                "type": "string",
                "teaser": false,
                "allowed": [
                  "devices:TestHardDrive"
                ],
                "required": true
              },
              "description": {
                "maxlength": 500,
                "type": "string",
                "description": "Full long description",
                "sink": -4
              },
              "created": {
                "writeonly": true,
                "type": "datetime",
                "dh_allowed_write_roles": "superuser",
                "doc": "Sets the _created and _updated, thought to be used in imports."
              },
              "sameAs": {
                "unique": true,
                "type": "list",
                "teaser": false
              }
            },
            "type": "dict"
          },
          "maxAcceptedMemory": {
            "type": "integer",
            "teaser": false
          },
          "description": {
            "maxlength": 500,
            "type": "string",
            "description": "Full long description",
            "sink": -4
          },
          "hid": {
            "teaser": false,
            "doc": "The unique constrained is evaluated manually as this field needs to be computed",
            "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
            "uid": true,
            "short": "HID",
            "type": "hid",
            "sink": 5
          },
          "url": {
            "type": "url",
            "move": "sameAs",
            "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
            "teaser": false
          }
        },
        "type": "dict",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "teaser": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Snapshot"
      ],
      "required": true
    },
    "autoUploaded": {
      "type": "boolean",
      "default": false
    },
    "unsecured": {
      "schema": {
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "model",
              "pid"
            ]
          },
          "@type": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          }
        },
        "type": "dict"
      },
      "readonly": true,
      "type": "list",
      "default": [],
      "description": "Information about existing non-HID device."
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "offline": {
      "type": "boolean"
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "doc": "This is not the same as the materialized \"parent\" field. This field can be set when snapshotting a component, for example through Scan, that should be included in a device."
    },
    "device": {
      "type": "dict",
      "sink": 4,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "required": true
    },
    "date": {
      "type": "datetime"
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "Workbench",
      "allowed": [
        "Workbench",
        "AndroidApp",
        "Web",
        "WorkbenchAuto"
      ]
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true,
      "description": "The events triggered by the Snapshot."
    },
    "osInstallation": {
      "schema": {
        "label": {
          "type": "string"
        },
        "elapsed": {
          "type": "time"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "dict"
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "modifiable": false,
      "teaser": false
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "hard-drive": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/hard-drive",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "erasure": {
      "schema": {
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "startingTime": {
          "type": "datetime"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "success": {
          "type": "boolean"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "steps": {
          "schema": {
            "schema": {
              "cleanWithZeros": {
                "type": "boolean"
              },
              "success": {
                "type": "boolean",
                "required": true
              },
              "endingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "allowed": [
                  "Random",
                  "Zeros"
                ],
                "required": true
              },
              "startingTime": {
                "type": "datetime"
              },
              "secureRandomSteps": {
                "type": "boolean"
              }
            },
            "type": "dict"
          },
          "type": "list"
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "endingTime": {
          "type": "datetime"
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:EraseSectors",
            "devices:EraseBasic"
          ],
          "required": true
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "size": {
      "type": "float",
      "unitCode": "4L",
      "sink": 1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "test": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "events"
          }
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "lifetime": {
          "type": "integer"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "tests": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "benchmark": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "BenchmarkHardDrive"
          ],
          "required": true
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "HardDrive"
      ],
      "required": true
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "firmwareRevision": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "benchmarks": {
      "schema": {
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "teaser": false,
            "allowed": [
              "BenchmarkHardDrive"
            ],
            "required": true
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "created": {
            "writeonly": true,
            "type": "datetime",
            "dh_allowed_write_roles": "superuser",
            "doc": "Sets the _created and _updated, thought to be used in imports."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "readonly": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "erasures": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_repair": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices have been succesfully repaired",
      "sink": -1,
      "url": "events/devices/repair",
      "fa": "fa-chain-broken",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Repair"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "mobile": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/mobile",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "required": true,
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Smartphone",
        "Tablet"
      ],
      "required": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "imei": {
      "unique": true,
      "type": "string"
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "required": true,
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Mobile"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "required": true,
      "short": "S/N",
      "sink": 4
    },
    "meid": {
      "unique": true,
      "type": "string"
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices": {
    "_settings": {
      "itemMethods": [
        "GET",
        "PATCH",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "IndividualProduct",
      "fa": "fa-desktop",
      "url": "devices",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "sectors": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "numberOfCores": {
      "min": 1,
      "type": "integer",
      "sink": 1
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "erasure": {
      "schema": {
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "cleanWithZeros": {
          "type": "boolean"
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "startingTime": {
          "type": "datetime"
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "success": {
          "type": "boolean"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "steps": {
          "schema": {
            "schema": {
              "cleanWithZeros": {
                "type": "boolean"
              },
              "success": {
                "type": "boolean",
                "required": true
              },
              "endingTime": {
                "type": "datetime"
              },
              "@type": {
                "type": "string",
                "allowed": [
                  "Random",
                  "Zeros"
                ],
                "required": true
              },
              "startingTime": {
                "type": "datetime"
              },
              "secureRandomSteps": {
                "type": "boolean"
              }
            },
            "type": "dict"
          },
          "type": "list"
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "endingTime": {
          "type": "datetime"
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "secureRandomSteps": {
          "type": "natural",
          "required": true
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:EraseSectors",
            "devices:EraseBasic"
          ],
          "required": true
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "size": {
      "min": 1,
      "type": "integer",
      "unitCode": "4L",
      "sink": 1
    },
    "address": {
      "type": "integer",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ],
      "unitCode": "A99",
      "sink": -1
    },
    "blockSize": {
      "type": "integer",
      "teaser": false,
      "sink": -1
    },
    "tests": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "totalRamSize": {
      "description": "The total amount of RAM memory the computer has.",
      "default": 0,
      "type": "float",
      "materialized": true,
      "short": "RAM",
      "doc": "It is updated after a Register, Add o Remove",
      "unitCode": "E34",
      "sink": 1
    },
    "memory": {
      "min": 1,
      "type": "float",
      "unitCode": "4L",
      "sink": 3
    },
    "totalHardDriveSize": {
      "default": 0,
      "type": "float",
      "materialized": true,
      "short": "HDD",
      "description": "The total amount of hard-drive capacity the computer has.",
      "unitCode": "4L",
      "sink": 1
    },
    "benchmark": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "BenchmarkHardDrive"
          ],
          "required": true
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "benchmarks": {
      "schema": {
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "@type": {
            "type": "string",
            "teaser": false,
            "allowed": [
              "BenchmarkHardDrive"
            ],
            "required": true
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "created": {
            "writeonly": true,
            "type": "datetime",
            "dh_allowed_write_roles": "superuser",
            "doc": "Sets the _created and _updated, thought to be used in imports."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "readonly": true
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "erasures": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true
    },
    "meid": {
      "unique": true,
      "type": "string"
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "speed": {
      "min": 1,
      "type": "float",
      "unitCode": "MHZ",
      "sink": -1
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "forceCreation": {
      "type": "boolean",
      "default": false
    },
    "connectors": {
      "schema": {
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "pcmcia": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      },
      "type": "dict"
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Laptop",
        "Microtower",
        "CRT",
        "Terminal",
        "LCD",
        "OLED",
        "Mouse",
        "Desktop",
        "Projector",
        "HUB",
        "VideoconferenceDevice",
        "LabelPrinter",
        "Netbook",
        "Switch",
        "Tablet",
        "WirelessAccessPoint",
        "LED",
        "Server",
        "Printer",
        "TFT",
        "Router",
        "Keyboard",
        "Smartphone",
        "Scanner",
        "SAI",
        "Plasma",
        "MultifunctionPrinter"
      ]
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "imei": {
      "unique": true,
      "type": "string"
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "teaser": false,
      "sink": -1
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "firmwareRevision": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Component",
        "RamModule",
        "Device",
        "Peripheral",
        "Computer",
        "OpticalDrive",
        "NetworkAdapter",
        "HardDrive",
        "GraphicCard",
        "Mobile",
        "Processor",
        "SoundCard",
        "ComputerMonitor",
        "TelevisionSet",
        "Motherboard"
      ],
      "required": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "processorModel": {
      "type": "string",
      "materialized": true,
      "short": "CPU",
      "description": "The model of the processor.",
      "sink": 1
    },
    "test": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "secured": {
          "type": "boolean",
          "sink": -3
        },
        "comment": {
          "type": "string",
          "description": "Short comment for fast and easy reading",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "geo": {
          "type": "point",
          "description": "Where did it happened",
          "sink": -5
        },
        "incidence": {
          "type": "boolean",
          "description": "Check if something went wrong, you can add details in a comment",
          "sink": -3
        },
        "type": {
          "type": "string"
        },
        "snapshot": {
          "type": "objectid",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "events"
          }
        },
        "firstError": {
          "type": "integer",
          "nullable": true
        },
        "byOrganization": {
          "type": "string",
          "readonly": true
        },
        "byUser": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "accounts"
          },
          "sink": 2,
          "dh_allowed_write_roles": [
            "admin",
            "superuser"
          ],
          "type": "objectid",
          "coerce_with_context": "<callable>"
        },
        "error": {
          "type": "boolean",
          "required": true
        },
        "parent": {
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "materialized": true,
          "type": "string",
          "description": "The event triggered in this computer."
        },
        "status": {
          "type": "string",
          "required": true
        },
        "device": {
          "type": "string",
          "data_relation": {
            "field": "_id",
            "embeddable": true,
            "resource": "devices"
          },
          "required": false
        },
        "date": {
          "type": "datetime",
          "description": "When this happened. Leave blank if it is happening now",
          "sink": -2
        },
        "lifetime": {
          "type": "integer"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "devices:TestHardDrive"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "inches": {
      "type": "natural"
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_remove": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Remove"
      ],
      "required": true
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "description": "Components affected by the event.",
      "teaser": false
    },
    "_id": {
      "type": "objectid"
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "Components have been removed from a device",
      "url": "events/devices/remove",
      "fa": "fa-minus-square-o",
      "resourceMethods": [
        "POST"
      ]
    },
    "device": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "placeholder_disallowed": true,
      "type": "string"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "graphic-card": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/graphic-card",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "memory": {
      "min": 1,
      "type": "float",
      "unitCode": "4L",
      "sink": 3
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "GraphicCard"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_locate": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "or": [
        "place"
      ],
      "type": "point",
      "excludes": "place",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "readonly": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Locate"
      ],
      "required": true
    },
    "place": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "places"
      },
      "type": "string",
      "description": "Where did it happened",
      "sink": 0
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices have been placed.",
      "sink": -3,
      "url": "events/devices/locate",
      "fa": "fa-map-marker",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_deallocate": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "from": {
      "type": "objectid",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "readonly": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Deallocate"
      ],
      "required": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The opposite of Allocate. Remove the ownership of the devices from someone",
      "sink": -6,
      "url": "events/devices/deallocate",
      "fa": "fa-hand-o-left",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "_id": {
      "type": "objectid"
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    }
  },
  "physical": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "geo": {
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "modifiable": false,
      "sink": -5
    },
    "telephone": {
      "type": "string"
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Zone",
        "CollectionPoint",
        "Department",
        "Warehouse"
      ]
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "size": {
      "type": "string",
      "allowed_description": {
        "ISO": {
          "1100-1100": "1100 \u00d7 1100 mm \u2013 43.31 \u00d7 43.31 in",
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "1067-1067": "1067 \u00d7 1067 mm \u2013 42.01 \u00d7 42.01 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "1165-1165": "1165 \u00d7 1165 mm \u2013 45.87 \u00d7 45.87 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "North America": {
          "1219-1067": "1219 \u00d7 1067 mm \u2013 47.99 \u00d7 42.01 in",
          "1219-508": "1219 \u00d7 508 mm \u2013 47.99 \u00d7 20.0 in",
          "1118-1118": "1118 \u00d7 1118 mm \u2013 44.02 \u00d7 44.02 in",
          "1219-1219": "1219 \u00d7 1219 mm \u2013 47.99 \u00d7 47.99 in",
          "1219-1016": "1219 \u00d7 1016 mm \u2013 47.99 \u00d7 40.0 in",
          "914-914": "914 \u00d7 914 mm \u2013 35.98 \u00d7 35.98 in",
          "889-1156": "889 \u00d7 1156 mm \u2013 35.0 \u00d7 45.51 in",
          "1219-914": "1219 \u00d7 914 mm \u2013 47.99 \u00d7 35.98 in",
          "1016-1016": "1016 \u00d7 1016 mm \u2013 40.0 \u00d7 40.0 in",
          "106-1067": "106 \u00d7 1067 mm \u2013 4.17 \u00d7 42.01 in",
          "1219-1143": "1219 \u00d7 1143 mm \u2013 47.99 \u00d7 45.0 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "Europe": {
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "800-600": "800 \u00d7 600 mm \u2013 31.5 \u00d7 23.62 in",
          "600-400": "600 \u00d7 400 mm \u2013 23.62 \u00d7 15.75 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "400-300": "400 \u00d7 300 mm \u2013 15.75 \u00d7 11.81 in",
          "1200-1000": "1200 \u00d7 1000 mm \u2013 47.24 \u00d7 39.37 in"
        }
      },
      "allowed": [
        "800-1200",
        "1200-1000",
        "1000-1200",
        "800-600",
        "600-400",
        "400-300",
        "1016-1219",
        "1000-1200",
        "1165-1165",
        "1067-1067",
        "1100-1100",
        "800-1200",
        "1016-1219",
        "106-1067",
        "1219-1219",
        "1219-1016",
        "1219-1067",
        "1016-1016",
        "1219-1143",
        "1118-1118",
        "914-914",
        "1219-914",
        "889-1156",
        "1219-508"
      ]
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "Group",
      "url": "group/physical",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "address": {
      "schema": {
        "addressCountry": {
          "allowed_description": [
            "Andorra",
            "United Arab Emirates",
            "Afghanistan",
            "Antigua and Barbuda",
            "Anguilla",
            "Albania",
            "Armenia",
            "Angola",
            "Antarctica",
            "Argentina",
            "American Samoa",
            "Austria",
            "Australia",
            "Aruba",
            "\u00c5land Islands",
            "Azerbaijan",
            "Bosnia and Herzegovina",
            "Barbados",
            "Bangladesh",
            "Belgium",
            "Burkina Faso",
            "Bulgaria",
            "Bahrain",
            "Burundi",
            "Benin",
            "Saint Barth\u00e9lemy",
            "Bermuda",
            "Brunei Darussalam",
            "Bolivia, Plurinational State of",
            "Bonaire, Sint Eustatius and Saba",
            "Brazil",
            "Bahamas",
            "Bhutan",
            "Bouvet Island",
            "Botswana",
            "Belarus",
            "Belize",
            "Canada",
            "Cocos (Keeling) Islands",
            "Congo, Democratic Republic of the",
            "Central African Republic",
            "Congo",
            "Switzerland",
            "C\u00f4te d'Ivoire",
            "Cook Islands",
            "Chile",
            "Cameroon",
            "China",
            "Colombia",
            "Costa Rica",
            "Cuba",
            "Cabo Verde",
            "Cura\u00e7ao",
            "Christmas Island",
            "Cyprus",
            "Czech Republic",
            "Germany",
            "Djibouti",
            "Denmark",
            "Dominica",
            "Dominican Republic",
            "Algeria",
            "Ecuador",
            "Estonia",
            "Egypt",
            "Western Sahara",
            "Eritrea",
            "Spain",
            "Ethiopia",
            "Finland",
            "Fiji",
            "Falkland Islands (Malvinas)",
            "Micronesia, Federated States of",
            "Faroe Islands",
            "France",
            "Gabon",
            "United Kingdom",
            "Grenada",
            "Georgia",
            "French Guiana",
            "Guernsey",
            "Ghana",
            "Gibraltar",
            "Greenland",
            "Gambia",
            "Guinea",
            "Guadeloupe",
            "Equatorial Guinea",
            "Greece",
            "South Georgia and the South Sandwich Islands",
            "Guatemala",
            "Guam",
            "Guinea-Bissau",
            "Guyana",
            "Hong Kong",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Croatia",
            "Haiti",
            "Hungary",
            "Indonesia",
            "Ireland",
            "Israel",
            "Isle of Man",
            "India",
            "British Indian Ocean Territory",
            "Iraq",
            "Iran, Islamic Republic of",
            "Iceland",
            "Italy",
            "Jersey",
            "Jamaica",
            "Jordan",
            "Japan",
            "Kenya",
            "Kyrgyzstan",
            "Cambodia",
            "Kiribati",
            "Comoros",
            "Saint Kitts and Nevis",
            "Korea, Democratic People's Republic of",
            "Korea, Republic of",
            "Kuwait",
            "Cayman Islands",
            "Kazakhstan",
            "Lao People's Democratic Republic",
            "Lebanon",
            "Saint Lucia",
            "Liechtenstein",
            "Sri Lanka",
            "Liberia",
            "Lesotho",
            "Lithuania",
            "Luxembourg",
            "Latvia",
            "Libya",
            "Morocco",
            "Monaco",
            "Moldova, Republic of",
            "Montenegro",
            "Saint Martin (French part)",
            "Madagascar",
            "Marshall Islands",
            "Macedonia, the former Yugoslav Republic of",
            "Mali",
            "Myanmar",
            "Mongolia",
            "Macao",
            "Northern Mariana Islands",
            "Martinique",
            "Mauritania",
            "Montserrat",
            "Malta",
            "Mauritius",
            "Maldives",
            "Malawi",
            "Mexico",
            "Malaysia",
            "Mozambique",
            "Namibia",
            "New Caledonia",
            "Niger",
            "Norfolk Island",
            "Nigeria",
            "Nicaragua",
            "Netherlands",
            "Norway",
            "Nepal",
            "Nauru",
            "Niue",
            "New Zealand",
            "Oman",
            "Panama",
            "Peru",
            "French Polynesia",
            "Papua New Guinea",
            "Philippines",
            "Pakistan",
            "Poland",
            "Saint Pierre and Miquelon",
            "Pitcairn",
            "Puerto Rico",
            "Palestine, State of",
            "Portugal",
            "Palau",
            "Paraguay",
            "Qatar",
            "R\u00e9union",
            "Romania",
            "Serbia",
            "Russian Federation",
            "Rwanda",
            "Saudi Arabia",
            "Solomon Islands",
            "Seychelles",
            "Sudan",
            "Sweden",
            "Singapore",
            "Saint Helena, Ascension and Tristan da Cunha",
            "Slovenia",
            "Svalbard and Jan Mayen",
            "Slovakia",
            "Sierra Leone",
            "San Marino",
            "Senegal",
            "Somalia",
            "Suriname",
            "South Sudan",
            "Sao Tome and Principe",
            "El Salvador",
            "Sint Maarten (Dutch part)",
            "Syrian Arab Republic",
            "Swaziland",
            "Turks and Caicos Islands",
            "Chad",
            "French Southern Territories",
            "Togo",
            "Thailand",
            "Tajikistan",
            "Tokelau",
            "Timor-Leste",
            "Turkmenistan",
            "Tunisia",
            "Tonga",
            "Turkey",
            "Trinidad and Tobago",
            "Tuvalu",
            "Taiwan, Province of China",
            "Tanzania, United Republic of",
            "Ukraine",
            "Uganda",
            "United States Minor Outlying Islands",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Holy See",
            "Saint Vincent and the Grenadines",
            "Venezuela, Bolivarian Republic of",
            "Virgin Islands, British",
            "Virgin Islands, U.S.",
            "Viet Nam",
            "Vanuatu",
            "Wallis and Futuna",
            "Samoa",
            "Yemen",
            "Mayotte",
            "South Africa",
            "Zambia",
            "Zimbabwe"
          ],
          "description": "The name of the country",
          "type": "string",
          "allowed": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "doc": "The addressCountry as per ISO 3166 (2 characters)."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        }
      },
      "type": "dict",
      "sink": -4
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "depth": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Physical",
        "Pallet",
        "Package",
        "Place"
      ],
      "required": true
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "network-adapter": {
    "speed": {
      "type": "float",
      "unitCode": "E20",
      "sink": 1
    },
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/network-adapter",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "NetworkAdapter"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_ready": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices work correctly, so they are ready to be used, sold, donated...",
      "sink": -2,
      "url": "events/devices/ready",
      "fa": "fa-check",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Ready"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_erase-sectors": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "cleanWithZeros": {
      "type": "boolean"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "success": {
      "type": "boolean"
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET"
      ],
      "parent": "devices:EraseBasic",
      "url": "events/devices/erase-sectors",
      "fa": "fa-eraser",
      "resourceMethods": [
        "POST"
      ]
    },
    "endingTime": {
      "type": "datetime"
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "steps": {
      "schema": {
        "schema": {
          "cleanWithZeros": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean",
            "required": true
          },
          "endingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "Random",
              "Zeros"
            ],
            "required": true
          },
          "startingTime": {
            "type": "datetime"
          },
          "secureRandomSteps": {
            "type": "boolean"
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:EraseSectors"
      ],
      "required": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "parent": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "materialized": true,
      "type": "string",
      "description": "The event triggered in this computer."
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "device": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "startingTime": {
      "type": "datetime"
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_receive": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "type": {
      "type": "string",
      "allowed": [
        "RecyclingPoint",
        "CollectionPoint",
        "FinalUser"
      ],
      "required": true
    },
    "receiver": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "sink": 2,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "required": true
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "Someone receives the devices: you, a transporter, the client...",
      "sink": -7,
      "url": "events/devices/receive",
      "fa": "fa-cart-arrow-down",
      "resourceMethods": [
        "POST"
      ]
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "receiverOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "readonly": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Receive"
      ],
      "required": true
    },
    "place": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "places"
      },
      "type": "string",
      "description": "Where did it happened",
      "sink": 0
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "peripheral": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/peripheral",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "required": true,
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Terminal",
        "Projector",
        "Printer",
        "HUB",
        "Router",
        "VideoconferenceDevice",
        "Keyboard",
        "LabelPrinter",
        "Scanner",
        "SAI",
        "Switch",
        "MultifunctionPrinter",
        "Mouse",
        "WirelessAccessPoint"
      ],
      "required": true
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "required": true,
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Peripheral"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "required": true,
      "short": "S/N",
      "sink": 4
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_to-repair": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices need repairing",
      "sink": 0,
      "url": "events/devices/to-repair",
      "fa": "fa-chain-broken",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:ToRepair"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_to-prepare": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices need some maintenance, some kind of testing or preparation to be ready",
      "sink": 1,
      "url": "events/devices/to-prepare",
      "fa": "fa-wrench",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:ToPrepare"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "manufacturers": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": true,
      "parent": "Organization",
      "url": "manufacturers",
      "resourceMethods": [
        "GET"
      ]
    },
    "_id": {
      "type": "objectid"
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Manufacturer"
      ],
      "required": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "logo": {
      "type": "url"
    }
  },
  "groups": {
    "_settings": {
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "Thing",
      "url": "group",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "policies": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "dataDestruction": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ],
              "required": true
            },
            "mechanical": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "eraseBasic": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "notifyPolicy": {
          "schema": {
            "disposal": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "socialImpact": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "deliveryNote": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "startReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherLocation": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRepaired": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeReused": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "receiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "endReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRecycled": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherTipology": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "recycler": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "nonResponseOfReceiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "reseller": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            }
          },
          "type": "dict"
        },
        "finalDisposal": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ],
              "required": true
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "returnToCircuit": {
              "type": "boolean"
            },
            "returnToReseller": {
              "type": "boolean"
            }
          },
          "type": "dict"
        },
        "@type": {
          "type": "string",
          "required": true,
          "allowed": [
            "Policies"
          ],
          "teaser": false
        },
        "authorizedResellers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "authorizedRefubrishers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Write here any custom policy or message you want other users to see.",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "created": {
          "dh_allowed_write_roles": "superuser",
          "type": "datetime",
          "writeonly": true,
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "telephone": {
      "type": "string"
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "from": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "size": {
      "type": "string",
      "allowed_description": {
        "ISO": {
          "1100-1100": "1100 \u00d7 1100 mm \u2013 43.31 \u00d7 43.31 in",
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "1067-1067": "1067 \u00d7 1067 mm \u2013 42.01 \u00d7 42.01 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "1165-1165": "1165 \u00d7 1165 mm \u2013 45.87 \u00d7 45.87 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "North America": {
          "1219-1067": "1219 \u00d7 1067 mm \u2013 47.99 \u00d7 42.01 in",
          "1219-508": "1219 \u00d7 508 mm \u2013 47.99 \u00d7 20.0 in",
          "1118-1118": "1118 \u00d7 1118 mm \u2013 44.02 \u00d7 44.02 in",
          "1219-1219": "1219 \u00d7 1219 mm \u2013 47.99 \u00d7 47.99 in",
          "1219-1016": "1219 \u00d7 1016 mm \u2013 47.99 \u00d7 40.0 in",
          "914-914": "914 \u00d7 914 mm \u2013 35.98 \u00d7 35.98 in",
          "889-1156": "889 \u00d7 1156 mm \u2013 35.0 \u00d7 45.51 in",
          "1219-914": "1219 \u00d7 914 mm \u2013 47.99 \u00d7 35.98 in",
          "1016-1016": "1016 \u00d7 1016 mm \u2013 40.0 \u00d7 40.0 in",
          "106-1067": "106 \u00d7 1067 mm \u2013 4.17 \u00d7 42.01 in",
          "1219-1143": "1219 \u00d7 1143 mm \u2013 47.99 \u00d7 45.0 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "Europe": {
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "800-600": "800 \u00d7 600 mm \u2013 31.5 \u00d7 23.62 in",
          "600-400": "600 \u00d7 400 mm \u2013 23.62 \u00d7 15.75 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "400-300": "400 \u00d7 300 mm \u2013 15.75 \u00d7 11.81 in",
          "1200-1000": "1200 \u00d7 1000 mm \u2013 47.24 \u00d7 39.37 in"
        }
      },
      "allowed": [
        "800-1200",
        "1200-1000",
        "1000-1200",
        "800-600",
        "600-400",
        "400-300",
        "1016-1219",
        "1000-1200",
        "1165-1165",
        "1067-1067",
        "1100-1100",
        "800-1200",
        "1016-1219",
        "106-1067",
        "1219-1219",
        "1219-1016",
        "1219-1067",
        "1016-1016",
        "1219-1143",
        "1118-1118",
        "914-914",
        "1219-914",
        "889-1156",
        "1219-508"
      ]
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "address": {
      "schema": {
        "addressCountry": {
          "allowed_description": [
            "Andorra",
            "United Arab Emirates",
            "Afghanistan",
            "Antigua and Barbuda",
            "Anguilla",
            "Albania",
            "Armenia",
            "Angola",
            "Antarctica",
            "Argentina",
            "American Samoa",
            "Austria",
            "Australia",
            "Aruba",
            "\u00c5land Islands",
            "Azerbaijan",
            "Bosnia and Herzegovina",
            "Barbados",
            "Bangladesh",
            "Belgium",
            "Burkina Faso",
            "Bulgaria",
            "Bahrain",
            "Burundi",
            "Benin",
            "Saint Barth\u00e9lemy",
            "Bermuda",
            "Brunei Darussalam",
            "Bolivia, Plurinational State of",
            "Bonaire, Sint Eustatius and Saba",
            "Brazil",
            "Bahamas",
            "Bhutan",
            "Bouvet Island",
            "Botswana",
            "Belarus",
            "Belize",
            "Canada",
            "Cocos (Keeling) Islands",
            "Congo, Democratic Republic of the",
            "Central African Republic",
            "Congo",
            "Switzerland",
            "C\u00f4te d'Ivoire",
            "Cook Islands",
            "Chile",
            "Cameroon",
            "China",
            "Colombia",
            "Costa Rica",
            "Cuba",
            "Cabo Verde",
            "Cura\u00e7ao",
            "Christmas Island",
            "Cyprus",
            "Czech Republic",
            "Germany",
            "Djibouti",
            "Denmark",
            "Dominica",
            "Dominican Republic",
            "Algeria",
            "Ecuador",
            "Estonia",
            "Egypt",
            "Western Sahara",
            "Eritrea",
            "Spain",
            "Ethiopia",
            "Finland",
            "Fiji",
            "Falkland Islands (Malvinas)",
            "Micronesia, Federated States of",
            "Faroe Islands",
            "France",
            "Gabon",
            "United Kingdom",
            "Grenada",
            "Georgia",
            "French Guiana",
            "Guernsey",
            "Ghana",
            "Gibraltar",
            "Greenland",
            "Gambia",
            "Guinea",
            "Guadeloupe",
            "Equatorial Guinea",
            "Greece",
            "South Georgia and the South Sandwich Islands",
            "Guatemala",
            "Guam",
            "Guinea-Bissau",
            "Guyana",
            "Hong Kong",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Croatia",
            "Haiti",
            "Hungary",
            "Indonesia",
            "Ireland",
            "Israel",
            "Isle of Man",
            "India",
            "British Indian Ocean Territory",
            "Iraq",
            "Iran, Islamic Republic of",
            "Iceland",
            "Italy",
            "Jersey",
            "Jamaica",
            "Jordan",
            "Japan",
            "Kenya",
            "Kyrgyzstan",
            "Cambodia",
            "Kiribati",
            "Comoros",
            "Saint Kitts and Nevis",
            "Korea, Democratic People's Republic of",
            "Korea, Republic of",
            "Kuwait",
            "Cayman Islands",
            "Kazakhstan",
            "Lao People's Democratic Republic",
            "Lebanon",
            "Saint Lucia",
            "Liechtenstein",
            "Sri Lanka",
            "Liberia",
            "Lesotho",
            "Lithuania",
            "Luxembourg",
            "Latvia",
            "Libya",
            "Morocco",
            "Monaco",
            "Moldova, Republic of",
            "Montenegro",
            "Saint Martin (French part)",
            "Madagascar",
            "Marshall Islands",
            "Macedonia, the former Yugoslav Republic of",
            "Mali",
            "Myanmar",
            "Mongolia",
            "Macao",
            "Northern Mariana Islands",
            "Martinique",
            "Mauritania",
            "Montserrat",
            "Malta",
            "Mauritius",
            "Maldives",
            "Malawi",
            "Mexico",
            "Malaysia",
            "Mozambique",
            "Namibia",
            "New Caledonia",
            "Niger",
            "Norfolk Island",
            "Nigeria",
            "Nicaragua",
            "Netherlands",
            "Norway",
            "Nepal",
            "Nauru",
            "Niue",
            "New Zealand",
            "Oman",
            "Panama",
            "Peru",
            "French Polynesia",
            "Papua New Guinea",
            "Philippines",
            "Pakistan",
            "Poland",
            "Saint Pierre and Miquelon",
            "Pitcairn",
            "Puerto Rico",
            "Palestine, State of",
            "Portugal",
            "Palau",
            "Paraguay",
            "Qatar",
            "R\u00e9union",
            "Romania",
            "Serbia",
            "Russian Federation",
            "Rwanda",
            "Saudi Arabia",
            "Solomon Islands",
            "Seychelles",
            "Sudan",
            "Sweden",
            "Singapore",
            "Saint Helena, Ascension and Tristan da Cunha",
            "Slovenia",
            "Svalbard and Jan Mayen",
            "Slovakia",
            "Sierra Leone",
            "San Marino",
            "Senegal",
            "Somalia",
            "Suriname",
            "South Sudan",
            "Sao Tome and Principe",
            "El Salvador",
            "Sint Maarten (Dutch part)",
            "Syrian Arab Republic",
            "Swaziland",
            "Turks and Caicos Islands",
            "Chad",
            "French Southern Territories",
            "Togo",
            "Thailand",
            "Tajikistan",
            "Tokelau",
            "Timor-Leste",
            "Turkmenistan",
            "Tunisia",
            "Tonga",
            "Turkey",
            "Trinidad and Tobago",
            "Tuvalu",
            "Taiwan, Province of China",
            "Tanzania, United Republic of",
            "Ukraine",
            "Uganda",
            "United States Minor Outlying Islands",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Holy See",
            "Saint Vincent and the Grenadines",
            "Venezuela, Bolivarian Republic of",
            "Virgin Islands, British",
            "Virgin Islands, U.S.",
            "Viet Nam",
            "Vanuatu",
            "Wallis and Futuna",
            "Samoa",
            "Yemen",
            "Mayotte",
            "South Africa",
            "Zambia",
            "Zimbabwe"
          ],
          "description": "The name of the country",
          "type": "string",
          "allowed": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "doc": "The addressCountry as per ISO 3166 (2 characters)."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code. For example, 94043."
        },
        "addressRegion": {
          "type": "string",
          "description": "The region. For example, CA."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address. For example, C/Jordi Girona, 1-3."
        },
        "addressLocality": {
          "type": "string",
          "description": "The locality. For example, Barcelona."
        }
      },
      "type": "dict",
      "sink": -4
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "depth": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "geo": {
      "type": "polygon",
      "description": "Set the area of the place. Be careful! Once set, you cannot update the area.",
      "modifiable": false,
      "sink": -5
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "to": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "OutgoingLot",
        "Package",
        "Pallet",
        "Place",
        "Abstract",
        "Lot",
        "IncomingLot",
        "Group",
        "Physical"
      ],
      "required": true
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Zone",
        "CollectionPoint",
        "Department",
        "Warehouse"
      ]
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "ram-module": {
    "speed": {
      "min": 1,
      "type": "float",
      "unitCode": "MHZ",
      "sink": -1
    },
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/ram-module",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "size": {
      "min": 1,
      "type": "integer",
      "unitCode": "4L",
      "sink": 1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "RamModule"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_add": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Add"
      ],
      "required": true
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "description": "Components affected by the event.",
      "teaser": false
    },
    "_id": {
      "type": "objectid"
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "Components have been added to a device",
      "url": "events/devices/add",
      "fa": "fa-plus-square-o",
      "resourceMethods": [
        "POST"
      ]
    },
    "device": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "placeholder_disallowed": true,
      "type": "string"
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_dispose": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices have been successfully taken for disposal.",
      "sink": -9,
      "url": "events/devices/dispose",
      "fa": "fa-trash-o",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Dispose"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "outgoing-lot": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Lot",
      "url": "lots/outgoing-lot",
      "fa": "fa-cubes",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "policies": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "dataDestruction": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ],
              "required": true
            },
            "mechanical": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "eraseBasic": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "notifyPolicy": {
          "schema": {
            "disposal": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "socialImpact": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "deliveryNote": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "startReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherLocation": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRepaired": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeReused": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "receiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "endReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRecycled": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherTipology": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "recycler": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "nonResponseOfReceiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "reseller": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            }
          },
          "type": "dict"
        },
        "finalDisposal": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ],
              "required": true
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "returnToCircuit": {
              "type": "boolean"
            },
            "returnToReseller": {
              "type": "boolean"
            }
          },
          "type": "dict"
        },
        "@type": {
          "type": "string",
          "required": true,
          "allowed": [
            "Policies"
          ],
          "teaser": false
        },
        "authorizedResellers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "authorizedRefubrishers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Write here any custom policy or message you want other users to see.",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "created": {
          "dh_allowed_write_roles": "superuser",
          "type": "datetime",
          "writeonly": true,
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "to": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "OutgoingLot"
      ],
      "required": true
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "pallets": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "pallets"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_migrate": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "Changes the DeviceHub that contains (i.e. holds) the device.",
      "sink": -6,
      "url": "events/devices/migrate",
      "fa": "fa-share-alt",
      "resourceMethods": [
        "POST"
      ]
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "from": {
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "excludes": "to",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "_id": {
      "type": "objectid"
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "devices": {
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "required": true
    },
    "to": {
      "or": [
        "from"
      ],
      "schema": {
        "database": {
          "type": "string",
          "doc": "The name of the database as in the URL",
          "required": true
        },
        "baseUrl": {
          "type": "url",
          "doc": "The scheme, domain, any path to reach the DeviceHub.",
          "required": true
        },
        "url": {
          "type": "url",
          "readonly": true,
          "doc": "The URL of the Migrate in the other database."
        }
      },
      "type": "dict",
      "excludes": "from"
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "materialized": true,
      "doc": "The result of the materialized components"
    },
    "returnedSameAs": {
      "valueschema": {
        "valueschema": [
          "type",
          "url"
        ],
        "type": "list"
      },
      "readonly": true,
      "propertyschema": {
        "type": "url"
      },
      "type": "dict",
      "writeonly": true,
      "excludes": "to",
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions."
    },
    "unsecured": {
      "schema": {
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "model",
              "pid"
            ]
          },
          "@type": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          }
        },
        "type": "dict"
      },
      "readonly": true,
      "type": "list",
      "default": []
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Migrate"
      ],
      "required": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "computer": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Device",
      "fa": "fa-desktop",
      "url": "devices/computer",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "forceCreation": {
      "type": "boolean",
      "default": false
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "type": {
      "type": "string",
      "allowed": [
        "Laptop",
        "Desktop",
        "Server",
        "Netbook",
        "Microtower"
      ]
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "totalRamSize": {
      "description": "The total amount of RAM memory the computer has.",
      "default": 0,
      "type": "float",
      "materialized": true,
      "short": "RAM",
      "doc": "It is updated after a Register, Add o Remove",
      "unitCode": "E34",
      "sink": 1
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Computer"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "totalHardDriveSize": {
      "default": 0,
      "type": "float",
      "materialized": true,
      "short": "HDD",
      "description": "The total amount of hard-drive capacity the computer has.",
      "unitCode": "4L",
      "sink": 1
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "processorModel": {
      "type": "string",
      "materialized": true,
      "short": "CPU",
      "description": "The model of the processor.",
      "sink": 1
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_test-hard-drive": {
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "lifetime": {
      "type": "integer"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "type": {
      "type": "string"
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "events"
      }
    },
    "_id": {
      "type": "objectid"
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "A test of the health of the hard drive",
      "url": "events/devices/test-hard-drive",
      "fa": "fa-flask",
      "resourceMethods": [
        "POST"
      ]
    },
    "status": {
      "type": "string",
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:TestHardDrive"
      ],
      "required": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "parent": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "materialized": true,
      "type": "string",
      "description": "The event triggered in this computer."
    },
    "device": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "accounts": {
    "isOrganization": {
      "type": "boolean",
      "sink": 2
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "publicKey": {
      "type": "string",
      "writeonly": true
    },
    "blocked": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "boolean",
      "default": true,
      "description": "As a manager, you need to specifically accept the user by unblocking it's account.",
      "sink": -2
    },
    "_settings": {
      "useDefaultDatabase": true,
      "itemMethods": [
        "PATCH",
        "DELETE",
        "GET"
      ],
      "parent": "Thing",
      "url": "accounts",
      "fa": "fa-user-o",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Account"
      ],
      "required": true
    },
    "organization": {
      "type": "string",
      "description": "The name of the organization the account is in. Organizations can be inside others.",
      "sink": 1
    },
    "fingerprints": {
      "type": "list",
      "readonly": true
    },
    "_id": {
      "type": "objectid"
    },
    "defaultDatabase": {
      "type": "string",
      "sink": -5,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "teaser": false
    },
    "token": {
      "type": "string",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "email": {
      "unique": true,
      "type": "email",
      "sink": 5,
      "required": true
    },
    "password": {
      "type": "string",
      "doc": "Users can only see their own passwords.",
      "minlength": 4,
      "sink": 4
    },
    "active": {
      "description": "Activate the account so you can start using it.",
      "sink": -1,
      "default": true,
      "type": "boolean",
      "doc": "Inactive accounts cannot login, and they are created through regular events."
    },
    "databases": {
      "teaser": false,
      "type": "databases",
      "sink": -4,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "required": true
    },
    "role": {
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "string",
      "default": "basic",
      "doc": "See the Roles section to get more info.",
      "allowed": [
        "employee",
        "superuser",
        "admin",
        "amateur",
        "basic"
      ]
    },
    "name": {
      "type": "string",
      "description": "The name of an account, if it is a person or an organization.",
      "sink": 3
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "processor": {
    "speed": {
      "type": "float",
      "unitCode": "A86",
      "sink": 1
    },
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/processor",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "address": {
      "type": "integer",
      "allowed": [
        256,
        128,
        64,
        32,
        8,
        16
      ],
      "unitCode": "A99",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "benchmark": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "score": {
          "type": "float"
        },
        "writingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "readingSpeed": {
          "type": "float",
          "unitCode": "4L"
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "BenchmarkProcessor"
          ],
          "required": true
        }
      },
      "type": "dict",
      "writeonly": true
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Processor"
      ],
      "required": true
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "numberOfCores": {
      "min": 1,
      "type": "integer",
      "sink": 1
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "benchmarks": {
      "schema": {
        "schema": {
          "label": {
            "type": "string",
            "description": "A short, descriptive title",
            "sink": 5
          },
          "score": {
            "type": "float"
          },
          "writingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "readingSpeed": {
            "type": "float",
            "unitCode": "4L"
          },
          "created": {
            "writeonly": true,
            "type": "datetime",
            "dh_allowed_write_roles": "superuser",
            "doc": "Sets the _created and _updated, thought to be used in imports."
          },
          "@type": {
            "type": "string",
            "teaser": false,
            "allowed": [
              "BenchmarkProcessor"
            ],
            "required": true
          }
        },
        "type": "dict"
      },
      "type": "list",
      "readonly": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_allocate": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "to": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "sink": 2,
      "doc": "The user the devices are allocated to. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "required": true
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "readonly": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "Assign the devices to someone, so that person 'owns' the device",
      "sink": -5,
      "url": "events/devices/allocate",
      "fa": "fa-hand-o-right",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Allocate"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "abstract": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "Group",
      "url": "group/abstract",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "policies": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "dataDestruction": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ],
              "required": true
            },
            "mechanical": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "eraseBasic": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "notifyPolicy": {
          "schema": {
            "disposal": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "socialImpact": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "deliveryNote": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "startReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherLocation": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRepaired": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeReused": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "receiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "endReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRecycled": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherTipology": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "recycler": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "nonResponseOfReceiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "reseller": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            }
          },
          "type": "dict"
        },
        "finalDisposal": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ],
              "required": true
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "returnToCircuit": {
              "type": "boolean"
            },
            "returnToReseller": {
              "type": "boolean"
            }
          },
          "type": "dict"
        },
        "@type": {
          "type": "string",
          "required": true,
          "allowed": [
            "Policies"
          ],
          "teaser": false
        },
        "authorizedResellers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "authorizedRefubrishers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Write here any custom policy or message you want other users to see.",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "created": {
          "dh_allowed_write_roles": "superuser",
          "type": "datetime",
          "writeonly": true,
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "to": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2
    },
    "from": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "pallets": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "pallets"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "IncomingLot",
        "Abstract",
        "Lot",
        "OutgoingLot"
      ],
      "required": true
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "motherboard": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/motherboard",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "connectors": {
      "schema": {
        "serial": {
          "type": "natural"
        },
        "usb": {
          "type": "natural"
        },
        "pcmcia": {
          "type": "natural"
        },
        "firewire": {
          "type": "natural"
        }
      },
      "type": "dict"
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "usedSlots": {
      "type": "integer",
      "teaser": false
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Motherboard"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "maxAcceptedMemory": {
      "type": "integer",
      "teaser": false
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "totalSlots": {
      "type": "integer",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "pallets": {
    "label": {
      "type": "string",
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Physical",
      "url": "pallets",
      "fa": "fa-align-justify",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "Pallet"
      ],
      "required": true
    },
    "size": {
      "type": "string",
      "allowed_description": {
        "ISO": {
          "1100-1100": "1100 \u00d7 1100 mm \u2013 43.31 \u00d7 43.31 in",
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "1067-1067": "1067 \u00d7 1067 mm \u2013 42.01 \u00d7 42.01 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "1165-1165": "1165 \u00d7 1165 mm \u2013 45.87 \u00d7 45.87 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "North America": {
          "1219-1067": "1219 \u00d7 1067 mm \u2013 47.99 \u00d7 42.01 in",
          "1219-508": "1219 \u00d7 508 mm \u2013 47.99 \u00d7 20.0 in",
          "1118-1118": "1118 \u00d7 1118 mm \u2013 44.02 \u00d7 44.02 in",
          "1219-1219": "1219 \u00d7 1219 mm \u2013 47.99 \u00d7 47.99 in",
          "1219-1016": "1219 \u00d7 1016 mm \u2013 47.99 \u00d7 40.0 in",
          "914-914": "914 \u00d7 914 mm \u2013 35.98 \u00d7 35.98 in",
          "889-1156": "889 \u00d7 1156 mm \u2013 35.0 \u00d7 45.51 in",
          "1219-914": "1219 \u00d7 914 mm \u2013 47.99 \u00d7 35.98 in",
          "1016-1016": "1016 \u00d7 1016 mm \u2013 40.0 \u00d7 40.0 in",
          "106-1067": "106 \u00d7 1067 mm \u2013 4.17 \u00d7 42.01 in",
          "1219-1143": "1219 \u00d7 1143 mm \u2013 47.99 \u00d7 45.0 in",
          "1016-1219": "1016 \u00d7 1219 mm \u2013 40.0 \u00d7 47.99 in"
        },
        "Europe": {
          "800-1200": "800 \u00d7 1200 mm \u2013 31.5 \u00d7 47.24 in",
          "800-600": "800 \u00d7 600 mm \u2013 31.5 \u00d7 23.62 in",
          "600-400": "600 \u00d7 400 mm \u2013 23.62 \u00d7 15.75 in",
          "1000-1200": "1000 \u00d7 1200 mm \u2013 39.37 \u00d7 47.24 in",
          "400-300": "400 \u00d7 300 mm \u2013 15.75 \u00d7 11.81 in",
          "1200-1000": "1200 \u00d7 1000 mm \u2013 47.24 \u00d7 39.37 in"
        }
      },
      "allowed": [
        "800-1200",
        "1200-1000",
        "1000-1200",
        "800-600",
        "600-400",
        "400-300",
        "1016-1219",
        "1000-1200",
        "1165-1165",
        "1067-1067",
        "1100-1100",
        "800-1200",
        "1016-1219",
        "106-1067",
        "1219-1219",
        "1219-1016",
        "1219-1067",
        "1016-1016",
        "1219-1143",
        "1118-1118",
        "914-914",
        "1219-914",
        "889-1156",
        "1219-508"
      ]
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_free": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices are available to be received for someone (sold, donated)",
      "sink": -4,
      "url": "events/devices/free",
      "fa": "fa-shopping-cart",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Free"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "devices_register": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "deviceIsNew": {
      "type": "boolean",
      "default": false,
      "doc": "Note that prior may 2017 this value is None for everyone."
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:Register"
      ],
      "required": true
    },
    "place": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "places"
      },
      "type": "string",
      "description": "Where did it happened",
      "sink": 0
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithOneDevice",
      "shortDescription": "The creation of a new device in the system.",
      "url": "events/devices/register",
      "fa": "fa-plus",
      "resourceMethods": [
        "POST"
      ]
    },
    "parent": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "placeholder_disallowed": true,
      "type": "string",
      "doc": "Please, discover first its parent before registering a component."
    },
    "_id": {
      "type": "objectid"
    },
    "components": {
      "type": [
        "list",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "device": {
      "type": [
        "dict",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "sound-card": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/sound-card",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "SoundCard"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "incoming-lot": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Lot",
      "url": "lots/incoming-lot",
      "fa": "fa-cubes",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "policies": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "dataDestruction": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ],
              "required": true
            },
            "mechanical": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "eraseBasic": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "notifyPolicy": {
          "schema": {
            "disposal": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "socialImpact": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "deliveryNote": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "startReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherLocation": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRepaired": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeReused": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "receiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "endReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRecycled": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherTipology": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "recycler": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "nonResponseOfReceiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "reseller": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            }
          },
          "type": "dict"
        },
        "finalDisposal": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ],
              "required": true
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "returnToCircuit": {
              "type": "boolean"
            },
            "returnToReseller": {
              "type": "boolean"
            }
          },
          "type": "dict"
        },
        "@type": {
          "type": "string",
          "required": true,
          "allowed": [
            "Policies"
          ],
          "teaser": false
        },
        "authorizedResellers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "authorizedRefubrishers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Write here any custom policy or message you want other users to see.",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "created": {
          "dh_allowed_write_roles": "superuser",
          "type": "datetime",
          "writeonly": true,
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "from": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "IncomingLot"
      ],
      "required": true
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "pallets": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "pallets"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "group-log-entry": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "added": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "places": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict"
    },
    "removed": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "places": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict"
    },
    "parent": {
      "schema": {
        "_id": {
          "type": "string"
        },
        "@type": {
          "type": "string"
        }
      },
      "type": "dict"
    },
    "_settings": {
      "itemMethods": [
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Thing",
      "url": "groups/log",
      "resourceMethods": [
        "GET"
      ]
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "GroupLogEntry",
        "UpdateGroupLogEntry"
      ],
      "required": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "_id": {
      "type": "objectid"
    }
  },
  "events": {
    "cleanWithZeros": {
      "type": "boolean"
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "force": {
      "type": [
        "boolean"
      ]
    },
    "userType": {
      "type": "string",
      "readonly": true
    },
    "from": {
      "type": "url",
      "dh_allowed_write_roles": "superuser",
      "excludes": "to",
      "doc": "This value is only filled by other DeviceHub when transmitting the Migrate"
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "_id": {
      "type": "objectid"
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "endingTime": {
      "type": "datetime"
    },
    "tests": {
      "schema": {
        "schema": {
          "elapsed": {
            "type": "time"
          },
          "success": {
            "type": "boolean"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "StressTest"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:TestHardDrive",
        "devices:Add",
        "devices:Free",
        "devices:DeviceEvent",
        "devices:Dispose",
        "devices:Migrate",
        "devices:EraseSectors",
        "devices:EventWithOneDevice",
        "devices:EraseBasic",
        "devices:ToDispose",
        "devices:Live",
        "devices:EventWithDevices",
        "devices:Register",
        "devices:Allocate",
        "devices:Ready",
        "devices:Receive",
        "devices:ToRepair",
        "devices:ToPrepare",
        "Event",
        "devices:Repair",
        "devices:Deallocate",
        "devices:Remove",
        "devices:Snapshot",
        "devices:Locate"
      ],
      "required": true
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "geo": {
      "or": [
        "place"
      ],
      "type": "point",
      "excludes": "place",
      "description": "Where did it happened",
      "sink": -5
    },
    "firstError": {
      "type": "integer",
      "nullable": true
    },
    "automatic": {
      "type": "boolean"
    },
    "isp": {
      "type": "string",
      "readonly": true
    },
    "to": {
      "or": [
        "from"
      ],
      "schema": {
        "database": {
          "type": "string",
          "doc": "The name of the database as in the URL",
          "required": true
        },
        "baseUrl": {
          "type": "url",
          "doc": "The scheme, domain, any path to reach the DeviceHub.",
          "required": true
        },
        "url": {
          "type": "url",
          "readonly": true,
          "doc": "The URL of the Migrate in the other database."
        }
      },
      "type": "dict",
      "excludes": "from"
    },
    "software": {
      "schema": {
        "productKey": {
          "type": "string"
        }
      },
      "type": "dict",
      "sink": -1
    },
    "place": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "places"
      },
      "type": "string",
      "description": "Where did it happened",
      "sink": 0
    },
    "returnedSameAs": {
      "valueschema": {
        "valueschema": [
          "type",
          "url"
        ],
        "type": "list"
      },
      "readonly": true,
      "propertyschema": {
        "type": "url"
      },
      "type": "dict",
      "writeonly": true,
      "excludes": "to",
      "doc": "A mapping of {deviceUrlInAgent1: sameAsValuesAgent2Sent, ...} representing the sameAs urls that are sent back to the agent that started the Migrate. Those values need to be sent, and keeping them helps in future debug sessions."
    },
    "steps": {
      "schema": {
        "schema": {
          "cleanWithZeros": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean",
            "required": true
          },
          "endingTime": {
            "type": "datetime"
          },
          "@type": {
            "type": "string",
            "allowed": [
              "Random",
              "Zeros"
            ],
            "required": true
          },
          "startingTime": {
            "type": "datetime"
          },
          "secureRandomSteps": {
            "type": "boolean"
          }
        },
        "type": "dict"
      },
      "type": "list"
    },
    "unsecured": {
      "schema": {
        "schema": {
          "type": {
            "type": "string",
            "allowed": [
              "model",
              "pid"
            ]
          },
          "@type": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          }
        },
        "type": "dict"
      },
      "readonly": true,
      "type": "list",
      "default": []
    },
    "country": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Country"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "offline": {
      "type": "boolean"
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "doc": "This is not the same as the materialized \"parent\" field. This field can be set when snapshotting a component, for example through Scan, that should be included in a device."
    },
    "device": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      },
      "placeholder_disallowed": true,
      "type": "string"
    },
    "date": {
      "type": "datetime"
    },
    "city": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "City"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "autonomousSystemNumber": {
      "type": "natural",
      "readonly": true
    },
    "startingTime": {
      "type": "datetime"
    },
    "organization": {
      "type": "string",
      "readonly": true
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "lifetime": {
      "type": "integer"
    },
    "automaticallyAllocate": {
      "type": "boolean",
      "default": false,
      "description": "Allocates to the user"
    },
    "snapshot": {
      "type": "objectid",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "events"
      }
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "success": {
      "type": "boolean"
    },
    "devices": {
      "schema": {
        "type": [
          "string",
          "dict"
        ],
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "doc": "A list of device identifiers. When one DeviceHub sends a Migrate to the other, devices are full devices with their components.",
      "required": true
    },
    "type": {
      "type": "string",
      "allowed": [
        "RecyclingPoint",
        "CollectionPoint",
        "FinalUser"
      ],
      "required": true
    },
    "inventory": {
      "schema": {
        "elapsed": {
          "type": "time"
        }
      },
      "type": "dict"
    },
    "elapsed": {
      "type": "time"
    },
    "receiver": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "sink": 2,
      "doc": "The user that receives it. It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "required": true
    },
    "administrativeArea": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "isoCode": {
          "type": "string",
          "description": "The ISO Code as ISO 3166-1"
        },
        "confidence": {
          "type": "natural"
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "AdministrativeArea"
          ],
          "required": true
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "debug": {
      "type": "dict",
      "teaser": false
    },
    "acceptedConditions": {
      "type": "boolean",
      "allowed": [
        true
      ],
      "required": true
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "status": {
      "type": "string",
      "required": true
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "version": {
      "type": "version",
      "teaser": false
    },
    "ip": {
      "type": "string",
      "readonly": true
    },
    "receiverOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the receive, the user worked in."
    },
    "continent": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "@type": {
          "type": "string",
          "teaser": false,
          "allowed": [
            "Continent"
          ],
          "required": true
        },
        "geoipCode": {
          "type": "string",
          "description": "The GEOIP Code"
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Full long description",
          "sink": -4
        },
        "created": {
          "writeonly": true,
          "type": "datetime",
          "dh_allowed_write_roles": "superuser",
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        }
      },
      "type": "dict",
      "readonly": true
    },
    "osInstallation": {
      "schema": {
        "label": {
          "type": "string"
        },
        "elapsed": {
          "type": "time"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "dict"
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "error": {
      "type": "boolean",
      "required": true
    },
    "request": {
      "type": "string",
      "readonly": true,
      "doc": "The whole Snapshot saved in case for debugging"
    },
    "snapshotSoftware": {
      "type": "string",
      "default": "Workbench",
      "allowed": [
        "Workbench",
        "AndroidApp",
        "Web",
        "WorkbenchAuto"
      ]
    },
    "secureRandomSteps": {
      "type": "natural",
      "required": true
    },
    "condition": {
      "schema": {
        "functionality": {
          "schema": {
            "general": {
              "description": "Grades the defects of a device that affect its usage.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D"
              ],
              "allowed_description": {
                "B": "B. There is a button difficult to press or a small scratch in an edge of a screen",
                "C": "C. A non-important button (or similar) doesn't work; screen has multiple scratches in edges",
                "D": "D. Multiple buttons don't work; screen has visual damage resulting in uncomfortable usage",
                "A": "A. Everything works perfectly (buttons, and in case of screens there are no scratches)"
              }
            }
          },
          "type": "dict"
        },
        "appearance": {
          "schema": {
            "general": {
              "description": "Grades the imperfections that aesthetically affect the device, but not its usage.",
              "type": "string",
              "allowed": [
                "0",
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "C": "C. Is in good condition (small visual damage in parts that are easy to spot, not on screens)",
                "B": "B. Is in really good condition (small visual damage in difficult places to spot)",
                "0": "0. The device is new",
                "E": "E. Is unacceptable (considerable visual damage that can affect usage)",
                "D": "D. Is acceptable (visual damage in visible parts, not on screens)",
                "A": "A. Is like new (without visual damage)"
              }
            }
          },
          "type": "dict"
        },
        "labelling": {
          "type": "boolean",
          "default": false,
          "description": "Sets if there are labels stuck that should be removed."
        },
        "bios": {
          "schema": {
            "general": {
              "description": "How difficult it has been to set the bios to boot from the network.",
              "type": "string",
              "allowed": [
                "A",
                "B",
                "C",
                "D",
                "E"
              ],
              "allowed_description": {
                "B": "B. You had to get into the BIOS, and in less than 5 steps you could set the network boot",
                "C": "C. Like B, but with more than 5 steps",
                "D": "D. Like B or C, but you had to unlock the BIOS (i.e. by removing the battery)",
                "E": "E. The device could not be booted through the network.",
                "A": "A. If by pressing a key you could access a boot menu with the network boot"
              }
            }
          },
          "type": "dict"
        }
      },
      "type": "dict",
      "teaser": true,
      "sink": 1
    },
    "deviceIsNew": {
      "type": "boolean",
      "default": false,
      "doc": "Note that prior may 2017 this value is None for everyone."
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "parent": "Thing",
      "url": "events",
      "fa": "fa-bookmark-o",
      "resourceMethods": [
        "GET"
      ]
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "events": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "events"
        }
      },
      "type": "list",
      "readonly": true,
      "description": "The events triggered by the Snapshot."
    },
    "autoUploaded": {
      "type": "boolean",
      "default": false
    },
    "_uuid": {
      "unique": true,
      "type": "uuid",
      "modifiable": false,
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "devices_to-dispose": {
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "secured": {
      "type": "boolean",
      "default": false,
      "sink": -3
    },
    "comment": {
      "type": "string",
      "description": "Short comment for fast and easy reading",
      "sink": -4
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "groups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "description": "The groups the event has been performed on.",
      "doc": "This field contains the groups and all its descendants."
    },
    "geo": {
      "type": "point",
      "description": "Where did it happened",
      "sink": -5
    },
    "incidence": {
      "type": "boolean",
      "default": false,
      "description": "Check if something went wrong, you can add details in a comment",
      "sink": -3
    },
    "devices": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "doc": "We want either 'devices' xor 'groups'."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "resource": "devices",
          "embeddable": true
        }
      },
      "type": "list",
      "materialized": true,
      "description": "Components affected by the event.",
      "teaser": false
    },
    "byOrganization": {
      "type": "string",
      "readonly": true
    },
    "byUser": {
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2,
      "dh_allowed_write_roles": [
        "admin",
        "superuser"
      ],
      "type": "objectid",
      "coerce_with_context": "<callable>"
    },
    "_id": {
      "type": "objectid"
    },
    "_settings": {
      "itemMethods": [
        "GET",
        "DELETE"
      ],
      "useDefaultDatabase": false,
      "parent": "devices:EventWithDevices",
      "shortDescription": "The devices need to be taken for disposal.",
      "sink": -8,
      "url": "events/devices/to-dispose",
      "fa": "fa-trash-o",
      "resourceMethods": [
        "POST"
      ]
    },
    "originalGroups": {
      "schema": {
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "readonly": true,
      "doc": "The groups the user performed the event on, without its descendants."
    },
    "date": {
      "type": "datetime",
      "description": "When this happened. Leave blank if it is happening now",
      "sink": -2
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "devices:ToDispose"
      ],
      "required": true
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  },
  "optical-drive": {
    "_settings": {
      "itemMethods": [
        "DELETE",
        "GET"
      ],
      "useDefaultDatabase": false,
      "parent": "Component",
      "fa": "fa-desktop",
      "url": "devices/optical-drive",
      "icon": "devices/icons/",
      "resourceMethods": [
        "GET"
      ]
    },
    "model": {
      "type": "string",
      "short": "Mod.",
      "sink": 4
    },
    "width": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "pid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "uid": true,
      "short": "PID",
      "description": "The PID identifies a device under a circuit or platform.",
      "sink": 5
    },
    "weight": {
      "type": "float",
      "teaser": false,
      "unitCode": "KGM",
      "sink": -1
    },
    "placeholder": {
      "type": "boolean",
      "default": false,
      "doc": "Invalid for components."
    },
    "_id": {
      "device_id": true,
      "unique": true,
      "type": "string",
      "uid": true,
      "short": "ID",
      "description": "The System ID, or simply ID, is an easy-to-read internal id.",
      "sink": 4
    },
    "productId": {
      "type": "string",
      "teaser": false,
      "sink": 3
    },
    "owners": {
      "schema": {
        "type": "objectid",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "accounts"
        }
      },
      "type": "list",
      "materialized": true,
      "sink": 2
    },
    "ancestors": {
      "schema": {
        "schema": {
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "packages": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "packages"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "pallets": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "pallets"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          },
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "labelId": {
      "type": "string",
      "short": "Label",
      "sink": 5
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "interface": {
      "type": "string",
      "sink": -1,
      "teaser": false
    },
    "label": {
      "type": "string",
      "description": "A short, descriptive title",
      "sink": 5
    },
    "manufacturer": {
      "type": "string",
      "short": "Man.",
      "sink": 4
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "components": {
      "schema": {
        "type": "string",
        "data_relation": {
          "field": "_id",
          "embeddable": true,
          "resource": "devices"
        }
      },
      "type": "list",
      "default": [],
      "sink": 1
    },
    "isUidSecured": {
      "type": "boolean",
      "default": true,
      "teaser": false
    },
    "rid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "RID",
      "description": "The Receiver ID is the internal identifier a Refurbisher uses.",
      "uid": true
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "OpticalDrive"
      ],
      "required": true
    },
    "gid": {
      "unique": true,
      "externalSynthetic": true,
      "type": "string",
      "short": "GID",
      "description": "The Giver ID links the device to the giver's (donor, seller) internal inventory.",
      "uid": true
    },
    "serialNumber": {
      "type": "string",
      "short": "S/N",
      "sink": 4
    },
    "parent": {
      "type": "string",
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "devices"
      }
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "hid": {
      "teaser": false,
      "doc": "The unique constrained is evaluated manually as this field needs to be computed",
      "description": "The Hardware ID is the unique ID traceability systems use to ID a device globally.",
      "uid": true,
      "short": "HID",
      "type": "hid",
      "sink": 5
    },
    "height": {
      "type": "float",
      "teaser": false,
      "unitCode": "MTR",
      "sink": -1
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    }
  },
  "lots": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The name or title. Write it to easily search and identify this.",
      "sink": 5
    },
    "_settings": {
      "useDefaultDatabase": false,
      "itemMethods": [
        "GET",
        "PATCH",
        "PUT",
        "DELETE"
      ],
      "parent": "Abstract",
      "url": "lots",
      "fa": "fa-cubes",
      "resourceMethods": [
        "GET",
        "POST"
      ]
    },
    "policies": {
      "schema": {
        "label": {
          "type": "string",
          "description": "A short, descriptive title",
          "sink": 5
        },
        "dataDestruction": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "eraseSectors": {
              "type": "boolean"
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "DataDestruction"
              ],
              "required": true
            },
            "mechanical": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "eraseBasic": {
              "type": "boolean"
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "notifyPolicy": {
          "schema": {
            "disposal": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "socialImpact": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "deliveryNote": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "startReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherLocation": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRepaired": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeReused": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "receiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "endReuseTime": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "devicesSetToBeRecycled": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "refurbisherTipology": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "recycler": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "nonResponseOfReceiver": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicy",
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            },
            "reseller": {
              "schema": {
                "label": {
                  "type": "string",
                  "description": "A short, descriptive title",
                  "sink": 5
                },
                "sameAs": {
                  "unique": true,
                  "type": "list",
                  "teaser": false
                },
                "to": {
                  "schema": {
                    "isOrganization": {
                      "type": "boolean",
                      "sink": 2
                    },
                    "organization": {
                      "type": "string",
                      "description": "The name of the organization the account is in. Organizations can be inside others.",
                      "sink": 1
                    },
                    "email": {
                      "unique": true,
                      "type": "email",
                      "sink": 5,
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of an account, if it is a person or an organization.",
                      "sink": 3
                    }
                  },
                  "data_relation": {
                    "field": "_id",
                    "embeddable": true,
                    "resource": "accounts"
                  },
                  "get_from_data_relation_or_create": "email",
                  "type": [
                    "objectid",
                    "dict",
                    "string"
                  ],
                  "sink": 2,
                  "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
                  "required": true
                },
                "description": {
                  "maxlength": 500,
                  "type": "string",
                  "description": "Full long description",
                  "sink": -4
                },
                "url": {
                  "type": "url",
                  "move": "sameAs",
                  "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
                  "teaser": false
                },
                "startDate": {
                  "type": "datetime"
                },
                "endDate": {
                  "type": "datetime"
                },
                "created": {
                  "writeonly": true,
                  "type": "datetime",
                  "dh_allowed_write_roles": "superuser",
                  "doc": "Sets the _created and _updated, thought to be used in imports."
                },
                "@type": {
                  "type": "string",
                  "teaser": false,
                  "allowed": [
                    "NotifyPolicyWithUser"
                  ],
                  "required": true
                }
              },
              "type": "dict"
            }
          },
          "type": "dict"
        },
        "finalDisposal": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "disposeToCollectionPoint": {
              "type": "boolean"
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "FinalDisposal"
              ],
              "required": true
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "returnToCircuit": {
              "type": "boolean"
            },
            "returnToReseller": {
              "type": "boolean"
            }
          },
          "type": "dict"
        },
        "@type": {
          "type": "string",
          "required": true,
          "allowed": [
            "Policies"
          ],
          "teaser": false
        },
        "authorizedResellers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedResellers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "authorizedRefubrishers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "endDate": {
              "type": "datetime"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedRefurbishers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            }
          },
          "type": "dict"
        },
        "description": {
          "maxlength": 500,
          "type": "string",
          "description": "Write here any custom policy or message you want other users to see.",
          "sink": -4
        },
        "sameAs": {
          "unique": true,
          "type": "list",
          "teaser": false
        },
        "authorizedReceivers": {
          "schema": {
            "label": {
              "type": "string",
              "description": "A short, descriptive title",
              "sink": 5
            },
            "cooperative": {
              "type": "boolean"
            },
            "url": {
              "type": "url",
              "move": "sameAs",
              "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
              "teaser": false
            },
            "digitalGapIndividual": {
              "type": "boolean"
            },
            "to": {
              "schema": {
                "isOrganization": {
                  "type": "boolean",
                  "sink": 2
                },
                "organization": {
                  "type": "string",
                  "description": "The name of the organization the account is in. Organizations can be inside others.",
                  "sink": 1
                },
                "email": {
                  "unique": true,
                  "type": "email",
                  "sink": 5,
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of an account, if it is a person or an organization.",
                  "sink": 3
                }
              },
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "accounts"
              },
              "get_from_data_relation_or_create": "email",
              "type": [
                "objectid",
                "dict",
                "string"
              ],
              "sink": 2,
              "doc": "A specific user where the devices have to go toIt can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
              "required": true
            },
            "created": {
              "writeonly": true,
              "type": "datetime",
              "dh_allowed_write_roles": "superuser",
              "doc": "Sets the _created and _updated, thought to be used in imports."
            },
            "nonForProfit": {
              "type": "boolean"
            },
            "description": {
              "maxlength": 500,
              "type": "string",
              "description": "Full long description",
              "sink": -4
            },
            "@type": {
              "type": "string",
              "teaser": false,
              "allowed": [
                "AuthorizedReceivers"
              ],
              "required": true
            },
            "startDate": {
              "type": "datetime"
            },
            "endDate": {
              "type": "datetime"
            },
            "sameAs": {
              "unique": true,
              "type": "list",
              "teaser": false
            }
          },
          "type": "dict"
        },
        "created": {
          "dh_allowed_write_roles": "superuser",
          "type": "datetime",
          "writeonly": true,
          "doc": "Sets the _created and _updated, thought to be used in imports."
        },
        "url": {
          "type": "url",
          "move": "sameAs",
          "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
          "teaser": false
        }
      },
      "type": "dict"
    },
    "events": {
      "schema": {
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "description": "A list of events where the first one is the most recent.",
      "doc": "Few values of events are kept, avoiding big documents. See device/hooks/MaterializeEvents.fields."
    },
    "to": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "doc": "The user the lot goes to It can be a reference to an account, or a basic account object. The object has to contain at least an e-mail. If the e-mail does not match to an existing one, an account is created. If the e-mail exists, that account is used, and the rest of the data (name, org...) is discarded.",
      "sink": 2
    },
    "from": {
      "schema": {
        "isOrganization": {
          "type": "boolean",
          "sink": 2
        },
        "organization": {
          "type": "string",
          "description": "The name of the organization the account is in. Organizations can be inside others.",
          "sink": 1
        },
        "email": {
          "unique": true,
          "type": "email",
          "sink": 5,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "The name of an account, if it is a person or an organization.",
          "sink": 3
        }
      },
      "get_from_data_relation_or_create": "email",
      "type": [
        "objectid",
        "dict",
        "string"
      ],
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      },
      "sink": 2
    },
    "_id": {
      "readonly": true,
      "type": "string",
      "teaser": true,
      "short": "ID",
      "sink": 4
    },
    "byUser": {
      "type": "objectid",
      "readonly": true,
      "data_relation": {
        "field": "_id",
        "embeddable": true,
        "resource": "accounts"
      }
    },
    "toOrganization": {
      "type": "string",
      "materialized": true,
      "readonly": true,
      "doc": "Materialization of the organization that, by the time of the allocation, the user worked in."
    },
    "children": {
      "schema": {
        "devices": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "components": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "devices"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "packages": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "packages"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "lots": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "lots"
            }
          },
          "unique_values": true,
          "type": "list"
        },
        "pallets": {
          "schema": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "pallets"
            }
          },
          "unique_values": true,
          "type": "list"
        }
      },
      "type": "dict",
      "default": {}
    },
    "url": {
      "type": "url",
      "move": "sameAs",
      "doc": "The url of the resource. If passed in, the value it is moved to sameAs.",
      "teaser": false
    },
    "fromOrganization": {
      "type": "string",
      "readonly": true
    },
    "description": {
      "maxlength": 500,
      "type": "string",
      "description": "Full long description",
      "sink": -4
    },
    "@type": {
      "type": "string",
      "teaser": false,
      "allowed": [
        "IncomingLot",
        "Lot",
        "OutgoingLot"
      ],
      "required": true
    },
    "ancestors": {
      "schema": {
        "schema": {
          "@type": {
            "type": "string",
            "allowed": [
              "IncomingLot",
              "Lot",
              "Package",
              "Place",
              "OutgoingLot"
            ]
          },
          "places": {
            "type": "string",
            "data_relation": {
              "field": "_id",
              "embeddable": true,
              "resource": "places"
            }
          },
          "lots": {
            "schema": {
              "type": "string",
              "data_relation": {
                "field": "_id",
                "embeddable": true,
                "resource": "lots"
              }
            },
            "unique_values": true,
            "type": "list"
          },
          "_id": {
            "type": "string",
            "doc": "Although this is a data relation, we cannot specify it to eve as datasourcesare different. This is an ordered set of values where the first is the parent."
          }
        },
        "type": "dict"
      },
      "type": "list",
      "materialized": true,
      "default": []
    },
    "created": {
      "writeonly": true,
      "type": "datetime",
      "dh_allowed_write_roles": "superuser",
      "doc": "Sets the _created and _updated, thought to be used in imports."
    },
    "sameAs": {
      "unique": true,
      "type": "list",
      "teaser": false
    }
  }
}
